// Code generated by go-bindata.
// sources:
// glGorat-Fill-Color.cs.glsl
// glGorat-Fill-Fixed.cs.glsl
// glGorat-Fill-Gaussian.cs.glsl
// glGorat-Fill-Nearest.cs.glsl
// glGorat-Fill-NearestNeighbor.cs.glsl
// glGorat-Fill-Repeat-horizontal.cs.glsl
// glGorat-Fill-Repeat-vertical.cs.glsl
// glGorat-Fill-Repeat.cs.glsl
// glGorat-Filler.cs.glsl
// glGorat-Stroker-type2.cs.glsl
// glGorat-Stroker.cs.glsl
// DO NOT EDIT!

package shaders

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _glgoratFillColorCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x41\x6b\xe3\x30\x14\x84\xef\x06\xff\x87\x81\x5c\xe4\xc5\x64\x13\x3b\xc9\xc5\xe4\xb0\x6c\xa0\x04\xda\x5e\xda\x42\x6f\x41\xb6\x65\xf3\xa8\xac\x57\x24\xd9\x24\x2d\xf9\xef\x45\x71\xd2\xf8\x26\x3d\xbd\x6f\x46\x33\xb3\x41\x59\x47\x6c\xb0\xca\x17\x71\x14\x47\xb3\x5a\x35\x64\x14\x9e\xfe\xbd\xbf\xed\x9f\x5f\x97\x1b\x6c\xd6\xeb\x7c\x1d\x9e\xb4\x3c\x71\xef\x85\xcd\x33\x4a\x51\x92\xa9\xc9\xb4\xd8\x62\x91\xa0\x37\xd4\xb0\xed\x40\xd4\xc9\x56\x65\x3b\x74\xd2\x7d\x14\x77\xa2\x2d\x65\x9e\x35\x53\x68\x39\x81\xae\x8c\x55\xae\xd7\xfe\x97\x82\x70\xbe\x5e\xe5\x8b\x29\x95\x25\x28\xfb\xa6\x51\x16\xff\x59\xb3\xc5\x77\x1c\x01\xc0\xa0\xaa\x15\xaa\x30\x29\xe2\xe8\x3c\x51\xd0\x5c\x49\x7d\x70\xf4\xa5\x0e\xc7\x60\x9a\x62\x32\x39\x8d\xdf\x20\x53\x84\x70\x03\x53\x8d\x4e\x92\x11\xc9\x4d\x96\x06\x55\x65\xf8\x64\x87\xed\x78\x16\xad\x3e\x3c\x68\x2e\xa5\xde\x9b\x81\x2b\xe9\x89\xcd\x7e\x37\x3f\x9e\x92\x62\x24\x1a\xcd\xd2\x83\x8c\x57\xc6\x29\x6c\xc7\xbb\xb8\x04\x7c\x64\x59\x8b\x50\x4b\x1a\x14\x93\xf9\x31\xc1\xdf\x7b\xc9\x57\xfe\xb2\xf9\xe2\xd9\x2a\x31\xb6\x71\x59\x4e\xc7\x6c\xf8\x73\x53\x0e\x76\xe7\x38\xfa\x09\x00\x00\xff\xff\x1e\x95\x89\xb2\xbb\x01\x00\x00")

func glgoratFillColorCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillColorCsGlsl,
		"glGorat-Fill-Color.cs.glsl",
	)
}

func glgoratFillColorCsGlsl() (*asset, error) {
	bytes, err := glgoratFillColorCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Color.cs.glsl", size: 443, mode: os.FileMode(438), modTime: time.Unix(1524709684, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillFixedCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x51\x6b\xb3\x30\x14\x86\xef\x05\xff\xc3\x0b\xbd\xd1\x0f\xbf\xae\xd5\xb6\x37\xd2\x8b\x8d\xc2\x28\x6c\xbb\xd9\x06\xbb\x2b\xb1\x46\x39\x2c\x26\x23\x89\xa2\x1b\xfd\xef\x23\x4d\x3b\x85\xc1\x6e\x44\x8f\xe7\xc9\xfb\x9c\x93\x59\xc7\xb5\x21\x25\xb1\xca\x16\x61\x10\x06\xb3\x92\x57\x24\x39\x1e\x6f\xdf\x5e\xf7\x4f\x2f\xcb\x0d\x36\xeb\x75\xb6\x76\xbf\x04\x1b\x54\x6b\x23\x9d\xa5\x94\xa0\x20\x59\x92\xac\xb1\xc5\x22\x46\x2b\xa9\x52\xba\x01\x51\xc3\x6a\x9e\xee\xd0\x30\xf3\x9e\x8f\x44\x5d\xb0\x2c\xad\xa6\xd0\x72\x02\x5d\x18\xcd\x4d\x2b\xec\x48\x19\x5b\xae\xb2\xc5\x14\x4a\x63\x14\x6d\x55\x71\x8d\x3b\xd5\xca\x12\x5f\x61\x00\x00\xd4\xf1\xe3\x0a\x85\x2b\xe5\x61\x70\xfa\x33\x37\xfb\x9d\x5b\x91\x10\x5c\xff\x50\x88\x84\x3a\x32\x71\x30\xf4\xc9\x0f\xbd\x53\x4d\x30\xa9\x0c\x5e\x9e\x64\xee\x56\xd2\x29\x2a\xd1\x30\x92\x51\x3c\xb5\x49\xf1\xa1\x0c\xb6\xfe\x3d\xaa\xc5\xe1\x5e\xa8\x82\x89\xbd\xec\xd4\x91\x59\x52\x72\xbf\x9b\xf7\x43\x9c\x4f\x09\xaf\xe1\x39\xf7\xfc\xef\x27\x9a\xf7\xc3\xa5\xad\x12\x8a\x59\x90\xb4\x5c\x1a\x8e\xad\xff\x8e\xce\x53\x3c\x28\x56\x46\x6e\xe7\x89\x43\xe3\x79\x1f\xe3\x66\xbc\xc1\x6b\x8c\xeb\x7c\xb6\x4a\xf3\xc8\xaf\xfa\xdc\x9c\x60\x3c\xc1\x2b\x24\xa3\x4a\x8c\x7f\xd7\x40\x27\x7b\x0a\x83\xef\x00\x00\x00\xff\xff\x83\x54\x7f\x94\x2f\x02\x00\x00")

func glgoratFillFixedCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillFixedCsGlsl,
		"glGorat-Fill-Fixed.cs.glsl",
	)
}

func glgoratFillFixedCsGlsl() (*asset, error) {
	bytes, err := glgoratFillFixedCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Fixed.cs.glsl", size: 559, mode: os.FileMode(438), modTime: time.Unix(1524711646, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillGaussianCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4b\x6f\xdb\x3c\x10\xbc\xeb\x57\x2c\x90\x0b\x19\xcb\xf2\x3b\x17\x7d\x3e\x7c\x45\x80\x26\x40\x1f\x41\x93\x18\xbd\x05\xb4\x45\x19\x44\x29\x32\xa0\x24\x87\x74\xe0\xff\x5e\x90\xd4\x83\x8e\xd2\xa0\x87\xda\x80\x41\x2d\x77\x66\x67\xc4\xe5\xfa\xe2\x40\x55\xc9\xa4\x80\xe5\x62\x1a\x45\x17\x19\xcd\x99\xa0\xf0\xf5\xff\x9f\x8f\xb7\xdf\x1e\x66\x57\x70\xb5\x5a\x2d\x56\x5d\xfc\xfe\xf1\xee\xee\xfb\x8f\x07\x98\x45\x11\x27\x46\xd6\x15\x52\x8b\x39\x8b\x61\xcb\x44\xc6\xc4\x1e\xd6\x30\xc5\x50\x0b\x96\x4b\x55\x00\x63\x05\xd9\xd3\xf9\x35\x14\xa4\xfc\x95\x76\x80\xfd\x96\x2c\xe6\x79\x88\x99\x05\x98\x06\xa2\x68\x59\xf3\xaa\x03\x95\x55\xb6\x5c\x4c\x43\xcc\x1c\xc3\xb6\xce\x73\xaa\xe0\x93\xac\x45\x06\xaf\x11\x00\x00\x3b\xd0\xdd\x12\xb6\x36\x92\x46\xa7\x8f\x6a\x2e\x86\x35\x73\xc6\x39\x55\x2d\x08\x10\x97\x3b\xc2\x9f\x4a\x76\xa4\x4f\xda\xaa\x8c\x21\x88\x18\xaf\x9b\x89\x34\x8a\x72\x2e\x49\x05\xb9\x40\x7e\xa1\x71\x1a\x45\x07\xc9\x32\x28\x08\x13\x08\x07\xda\xe6\xf0\x2c\x4b\x58\xfb\x35\xda\xf3\xa7\xcf\x5c\x6e\x09\xbf\x15\x07\xb9\x23\x15\x93\xe2\xf6\x3a\xd1\x06\xa7\x01\xc0\xab\xf2\x30\xfb\x3b\xf6\xf6\x12\x6d\x86\x59\x56\x99\x65\xb7\x86\xee\xd9\x91\x22\x1f\x6e\xf8\x5c\x62\x46\x79\x45\x60\xed\x1e\x90\x0b\xdb\x8f\x13\x8e\x7a\x92\x44\x63\x98\x34\x51\x5f\xee\xd8\x17\xc6\xf1\x9f\x71\xe6\x2d\xee\xa5\xc3\x19\xec\x60\xa1\x98\x72\x47\x38\x1d\x88\x29\x88\x46\x4e\x66\xa2\x63\x98\x05\xd5\xfa\x0d\x63\x37\x06\x74\x8a\x64\x03\xb2\x1d\x65\x1c\xb9\x3a\x89\x86\xcb\xb6\x81\x03\xd2\x20\xc1\x04\x09\x03\xf2\x03\xe1\x75\xa7\xb5\x3b\x14\x47\xda\x89\xed\xc3\x06\xba\xf8\xf9\x71\x2a\x22\xf6\xf4\xa6\x6b\x01\x26\x2a\xe4\x98\x13\x3d\x56\x24\x4b\xf4\x68\x9a\xac\x70\x0c\x41\x7c\xe4\xe2\x78\xc8\xb2\x79\x87\xc5\x38\x16\x33\x60\x31\x8e\xc5\xb4\x2c\x93\x49\x6b\x6c\x09\x3b\xc9\xa5\xf2\xc6\x96\x68\x1a\xbb\x6f\x93\xe6\xfb\xb9\xac\x0b\x7b\xb1\x5b\x24\xdc\x48\xc5\x8e\x52\x54\x84\xdb\x2d\x9f\x28\x95\x15\x01\xf6\x9e\x78\x87\x89\x4e\x41\xc3\x7f\xed\x93\x49\xf5\x68\x84\x5f\xcf\x1b\x07\x84\x54\x05\xe1\xb0\x06\x0d\x63\x68\xec\xa6\x6f\x72\x14\xb5\x9d\x9f\x0b\xe4\x93\x71\xbf\xef\x85\x8f\x9a\x7e\xff\x22\x49\xd6\x9c\x4b\xdc\xbc\x16\x7d\xf6\x06\x30\xc6\x70\x69\xe9\x7a\x06\xeb\x6c\xb4\xee\x63\xa7\xd6\xe2\x86\xaa\x8a\xed\xde\x31\x68\x5a\x83\x1b\x6b\xd0\xb4\x06\x37\x89\x49\xcd\x47\x06\x4d\x67\xd0\xfc\x43\x83\x41\x97\xe0\x18\xcc\xdf\x1a\xf4\xbc\x93\xb5\xdd\x0e\x0f\x9a\x89\x8a\x8a\xd2\x36\xb9\xbf\xc1\x7d\x59\x3b\xc1\x63\x3b\x7e\xb0\x9f\x0c\xdd\xff\x43\xd3\x94\x6e\xe0\x54\x52\x51\xe4\x07\xb7\xcb\x8d\x9b\x42\x97\x2d\x31\x4e\xa3\xd3\x3b\xd3\xd2\xbf\x34\xdb\x3a\x05\x13\xc8\xdd\xf9\xb4\x0b\x91\x6d\x89\xf4\x59\x3b\x6e\x89\x93\xf8\x2c\x5f\xd0\x34\x59\xc5\xb0\x6c\x76\x15\xad\x6a\x25\x00\x75\x1b\x76\xa1\x63\x98\x63\x6c\x67\x10\x29\xa9\x55\x8e\x66\x30\x76\xeb\x34\x3a\xfd\x0e\x00\x00\xff\xff\x25\x31\x43\xa3\xfc\x06\x00\x00")

func glgoratFillGaussianCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillGaussianCsGlsl,
		"glGorat-Fill-Gaussian.cs.glsl",
	)
}

func glgoratFillGaussianCsGlsl() (*asset, error) {
	bytes, err := glgoratFillGaussianCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Gaussian.cs.glsl", size: 1788, mode: os.FileMode(438), modTime: time.Unix(1524717807, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillNearestCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x5d\x6b\xdb\x30\x14\x7d\x0f\xe4\x3f\x5c\xe8\x8b\xd4\x38\xce\x77\x5f\xb2\x3c\x6c\x14\xd6\xc2\x3e\xca\xda\x86\xbd\x15\x25\x96\x83\x98\x22\x0d\xd9\xce\xa4\x94\xfc\xf7\x21\xc9\x96\xd5\xc4\x14\x06\x4b\x20\xd8\x57\xf7\x9c\x7b\x8e\x74\x75\x73\x75\xa0\xaa\x60\x52\xc0\x7c\x36\xee\xf7\xfa\xbd\xab\x8c\xe6\x4c\x50\xf8\xfa\xf1\xe7\xf3\xfd\xb7\xa7\xc9\x0d\xdc\x2c\x16\xb3\x45\xbb\xf0\xf8\xfc\xf0\xf0\xfd\xc7\x13\x4c\x6c\x36\x27\x46\x56\x25\x52\xb3\x29\x4b\x60\xc3\x44\xc6\xc4\x0e\x56\x30\xc6\x50\x09\x96\x4b\xb5\x07\xc6\xf6\x64\x47\xa7\xb7\xb0\x27\xc5\xaf\x65\x8b\xd8\x6d\xc8\x6c\x9a\xc7\xa0\x49\x04\xaa\x31\x8a\x16\x15\x2f\x5b\x54\x51\x66\xf3\xd9\x38\x06\x4d\x31\x6c\xaa\x3c\xa7\x0a\x3e\xc9\x4a\x64\xf0\xda\xef\x01\x00\xb0\x03\xdd\xce\x61\x63\x43\xcb\x7e\xef\xf4\x6e\xdd\xd9\x65\xdd\x9c\x71\x4e\x55\x40\x01\xe2\x72\x4b\xf8\x4b\xc1\x8e\xf4\x45\x5b\xa9\x09\x44\x11\xe3\xc5\x33\xb1\xb4\x5b\x92\x73\x49\x4a\xc8\x05\xf2\x0f\x1a\xbb\xe8\x41\xb2\x0c\xf6\x84\x09\x84\x63\x8d\x53\xf8\x2d\x0b\x58\xf9\x67\xb4\xe3\x2f\x9f\xb9\xdc\x10\x7e\x2f\x0e\x72\x4b\x4a\x26\xc5\xfd\x6d\xaa\x8d\xa5\x68\x11\x5e\x9c\xc7\xd9\xdf\xa1\xf7\x99\x6a\xd3\x91\x66\x05\x5a\x7e\x6b\xec\x91\x1d\x29\xf2\xe1\x86\xd1\x65\x66\x94\x97\x04\x56\xee\x05\xf9\xb8\xfd\x38\xfd\xa8\xa5\x49\x35\x86\x51\x1d\xf5\x15\x8f\x6d\x6d\x9c\xbc\x03\x34\xe7\xc0\x3f\x01\x68\xb0\xc7\xbd\x11\x54\x6c\x09\xa7\x97\x82\xf6\x44\x23\xa7\x35\xd5\x09\x4c\xe2\x8a\xed\x8a\xb1\x2b\x1d\x94\x8a\x64\x97\x84\x5b\xca\x38\x72\xc5\x52\x0d\xd7\x4d\x67\xc7\xc4\x51\x86\x89\x32\x3a\x0a\x1c\x08\xaf\x82\xe6\x70\x44\x8e\x37\x68\x6e\xc3\x06\x42\xfc\xec\x74\x15\x11\x3b\x7a\x17\x5a\x82\x89\x12\x39\xea\x54\x0f\x15\xc9\x52\x3d\x18\xa7\x0b\x9c\x40\x14\x1f\xb8\x38\xee\xa0\x59\x77\xd0\x18\x47\x63\x2e\x68\x8c\xa3\x31\x81\x66\x34\x0a\xe6\xe6\xb0\x95\x5c\x2a\x6f\x6e\x8e\xc6\x89\xfb\x36\x89\xbe\xcd\x8b\x6a\x6f\xef\x7d\x00\xc3\x9d\x54\xec\x28\x45\x49\xb8\x5d\xab\x53\xa5\xb2\x4a\xc0\x5e\x21\xef\x33\xd5\x4b\xd0\xf0\xa1\x79\x33\x4b\x3d\x18\xe0\xd7\xb3\x56\x02\x21\xd5\x9e\x70\x58\x81\x86\x21\xd4\xae\x97\xe7\x49\x8a\xda\x0b\x91\x0b\xe4\xb3\x71\x94\xe0\xe5\x0f\xea\x6b\xf0\x45\x92\xac\x3e\xa1\xa4\xde\x1e\xfd\x66\x27\x30\xc6\x70\x6d\xf9\x22\x0a\xeb\x6f\xb0\x8a\x82\xa7\xe0\x74\x4d\x55\xc9\xb6\x5d\x3e\x4d\xe3\x73\x6d\x7d\x9a\xc6\xe7\x3a\x35\x4b\xf3\xae\x4f\x13\x7c\x9a\xff\xea\x33\xea\x1a\x9c\x80\xf9\x07\x9f\x9e\x7a\xb4\xb2\x09\x6f\x0e\x9e\x89\x92\x8a\xc2\x76\xbe\xbf\xe0\x6d\x69\x3b\xf0\x13\x3b\xa1\xb0\x9f\x1c\xe1\x1f\xa5\x69\x54\x37\x93\x4a\xa9\x28\xf2\x73\xde\x25\x27\x75\xa9\xeb\x86\xd9\x1a\x3c\x75\x0e\xd6\x7a\xff\x6c\x37\xd9\x01\xa0\x13\x08\x4d\xd9\xc4\x26\x30\x84\x38\xae\x68\x59\x29\x01\xb6\x7b\x4e\x7f\x03\x00\x00\xff\xff\xc6\x9b\xc9\xee\xfa\x06\x00\x00")

func glgoratFillNearestCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillNearestCsGlsl,
		"glGorat-Fill-Nearest.cs.glsl",
	)
}

func glgoratFillNearestCsGlsl() (*asset, error) {
	bytes, err := glgoratFillNearestCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Nearest.cs.glsl", size: 1786, mode: os.FileMode(438), modTime: time.Unix(1524717432, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillNearestneighborCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x51\x6b\xab\x30\x14\xc7\xdf\x05\xbf\xc3\x81\xbe\x24\xf7\x7a\xad\xd5\xda\x17\xe9\xc3\xbd\x14\x2e\x85\x6d\x2f\xdb\x60\x6f\x25\xd6\x28\x87\xc5\x64\x68\x74\xda\xd1\xef\x3e\x62\x6c\x95\x16\xf6\x52\xd2\xe3\xff\x97\xf3\x3b\x87\x2c\x5a\x5e\xd5\xa8\x24\xac\xa3\xc0\x75\x5c\x67\x91\xf1\x1c\x25\x87\xc7\xbf\x6f\xaf\xfb\xa7\x97\xd5\x06\x36\x71\x1c\xc5\xe6\x93\x60\xbd\x6a\x34\xa9\xa2\x10\x3d\x48\x51\x66\x28\x0b\xd8\x42\x40\xa1\x91\x98\xab\xaa\x04\xc4\x92\x15\x3c\xdc\x41\xc9\xea\xf7\x64\x22\x8a\x94\x45\x61\x3e\x87\x56\x33\x68\x64\x2a\x5e\x37\x42\x4f\x54\xad\xb3\x75\x14\xcc\xa1\x90\x42\xda\xe4\x39\xaf\xe0\x9f\x6a\x64\x06\x5f\xae\x03\x00\x80\x2d\x3f\xae\x21\x35\xa5\xc4\x75\xce\x3f\xf6\x8d\xee\xfb\xe6\x28\x04\xaf\xae\x14\x10\xa1\x8e\x4c\x1c\x6a\x3c\xf1\x43\x67\x54\x3d\x98\x55\x7a\x2b\x8f\x32\x31\x2b\x69\x15\x66\x50\x32\x94\x84\xce\x6d\x42\xf8\x50\x35\x6c\xed\x99\x14\xe2\xf0\x5f\xa8\x94\x89\xbd\x6c\xd5\x91\x69\x54\x72\xbf\xf3\xbb\x9e\x26\x73\xc2\x6a\x58\xce\xfc\xfe\xb1\x13\xf9\x5d\x3f\xc6\x96\xcb\xfb\xb8\x51\x32\x7d\xcc\x28\xcf\x78\xe2\xc4\x96\xe9\x0d\x32\x10\x19\x17\x9a\xc1\x76\xf8\x43\x72\xa1\x98\x26\xd3\x25\x7e\x47\x61\x09\xb6\x6a\xfb\x9e\x26\x03\xea\xc1\x5d\xbe\xbf\xcd\x7f\x5e\xf3\x3d\xbd\xed\x3f\xe4\x00\xa5\xe6\xb2\x36\xbe\x96\x1b\xac\x1f\x14\xcb\x88\x79\x2e\x9e\x99\x9a\x5a\x8f\xeb\xe3\xbb\x6c\x68\x98\x4f\xab\x8a\x13\xfb\x4a\x86\xb0\x07\xd3\x0d\xd6\xcc\x1b\xb7\x43\x88\x1d\xf2\xb2\x52\x0a\xbf\x21\xf0\x63\x0a\xbf\xec\x16\xa8\x39\x8d\x3a\xc6\xf5\xec\x3a\xdf\x01\x00\x00\xff\xff\x91\xd2\x23\x07\x08\x03\x00\x00")

func glgoratFillNearestneighborCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillNearestneighborCsGlsl,
		"glGorat-Fill-NearestNeighbor.cs.glsl",
	)
}

func glgoratFillNearestneighborCsGlsl() (*asset, error) {
	bytes, err := glgoratFillNearestneighborCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-NearestNeighbor.cs.glsl", size: 776, mode: os.FileMode(438), modTime: time.Unix(1524791918, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatHorizontalCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xdf\x6b\xab\x30\x14\xc7\xdf\x05\xff\x87\x03\xe5\x42\xbc\x78\xbd\xad\xb6\x7d\x91\x3e\x6c\x14\x46\x61\xdb\xcb\x36\xd8\x5b\x89\x35\xca\x61\x31\x19\x49\x14\xed\xe8\xff\x3e\x62\x66\x0d\x6c\xec\x45\xf4\x78\x3e\xdf\xf3\xc9\x8f\x45\xc7\x94\x46\x29\x60\x9d\x2d\xc3\x20\x0c\x16\x25\xab\x50\x30\x78\xb8\x79\x7d\x39\x3c\x3e\xaf\xb6\xb0\xdd\x6c\xb2\x8d\xfd\xc5\xe9\x20\x5b\x43\x54\x96\x62\x0c\x05\x8a\x12\x45\x0d\x3b\x58\x46\xd0\x0a\xac\xa4\x6a\x00\xb1\xa1\x35\x4b\xf7\xd0\x50\xfd\x96\xcf\x44\x5d\xd0\x2c\xad\x7c\x68\xe5\x41\x5f\x8c\x62\xba\xe5\x66\xa6\xb4\x29\xd7\xd9\xd2\x87\xd2\x08\x8a\xb6\xaa\x98\x82\x5b\xd9\x8a\x12\x3e\xc2\x00\x00\x00\x3b\x76\x5a\x43\x61\x4b\x79\x18\x5c\x7e\x9d\x9b\x7d\x9f\x5b\x21\xe7\x4c\x5d\x29\x20\x5c\x9e\x28\x3f\x6a\x3c\xb3\x63\x6f\x55\x63\xf0\x2a\x83\x93\x47\x91\xdb\x2d\xe9\x24\x96\xd0\x50\x14\x24\xf2\x6d\x52\x78\x97\x1a\x76\xee\x9d\xd4\xfc\x78\xc7\x65\x41\xf9\x41\x74\xf2\x44\x0d\x4a\x71\xd8\x27\xfd\x10\xe5\x3e\xe1\x34\x1c\x67\x9f\xff\xdc\x8a\x92\x7e\xf8\xa1\xcd\xaa\xd8\x7c\xbb\x84\x27\x3c\x33\xe2\xca\x53\xe2\x35\x2b\xe9\xe1\xcf\xce\x63\x92\x7e\xea\xe0\x92\x1a\x40\x61\x98\xd0\x36\x69\xfc\x26\x63\xde\xbd\xa4\x25\xb1\x07\x18\x5b\x8f\x28\xe9\x23\xf8\x3f\x5f\x87\x49\x66\x9c\x6c\xa4\x62\xc4\x9d\xdb\xd8\x1c\xc3\x9c\xe0\x86\xc6\xb3\x4b\x04\x7f\xa7\x81\xd6\xf3\x62\xf7\xef\x33\x00\x00\xff\xff\xeb\x7b\x91\x12\x7e\x02\x00\x00")

func glgoratFillRepeatHorizontalCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatHorizontalCsGlsl,
		"glGorat-Fill-Repeat-horizontal.cs.glsl",
	)
}

func glgoratFillRepeatHorizontalCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatHorizontalCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat-horizontal.cs.glsl", size: 638, mode: os.FileMode(438), modTime: time.Unix(1524715698, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatVerticalCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x51\x6b\xab\x30\x18\x86\xef\x05\xff\xc3\x07\xe5\x40\x3c\x78\x3c\xad\xb6\xbd\x91\x5e\x6c\x14\x46\x61\xdb\xcd\x36\xd8\x5d\x89\x35\xca\xc7\x62\x32\x92\x28\xda\xd1\xff\x3e\x62\x66\x0d\x6c\xec\x46\xf4\x33\xcf\xfb\x3e\x31\x2e\x3a\xa6\x34\x4a\x01\xeb\x6c\x19\x06\x61\xb0\x28\x59\x85\x82\xc1\xc3\xcd\xeb\xcb\xe1\xf1\x79\xb5\x85\xed\x66\x93\x6d\xec\x2b\x4e\x07\xd9\x1a\xa2\xb2\x14\x63\x28\x50\x94\x28\x6a\xd8\xc1\x32\x82\x56\x60\x25\x55\x03\x88\x0d\xad\x59\xba\x87\x86\xea\xb7\x7c\x26\xea\x82\x66\x69\xe5\x43\x2b\x0f\xfa\x62\x14\xd3\x2d\x37\x33\xa5\x4d\xb9\xce\x96\x3e\x94\x46\x50\xb4\x55\xc5\x14\xdc\xca\x56\x94\xf0\x11\x06\x00\x00\xd8\xb1\xd3\x1a\x0a\x3b\xca\xc3\xe0\xf2\x6b\x6f\xf6\xbd\xb7\x42\xce\x99\xba\x52\x40\xb8\x3c\x51\x7e\xd4\x78\x66\xc7\xde\xaa\xc6\xe0\x4d\x06\x27\x8f\x22\xb7\x9f\xa4\x93\x58\x42\x43\x51\x90\xc8\xb7\x49\xe1\x5d\x6a\xd8\xb9\x7b\x52\xf3\xe3\x1d\x97\x05\xe5\x07\xd1\xc9\x13\x35\x28\xc5\x61\x9f\xf4\x43\x94\xfb\x84\xd3\x70\x9c\xbd\xfe\x73\x3b\x4a\xfa\xe1\x87\x65\x56\xc5\xe6\xdb\x2d\x3c\xe1\x99\x11\x37\x9e\x12\xaf\x59\xc9\x00\x7f\x76\x1e\x93\x4c\x61\x15\x97\xd4\x00\x0a\xc3\x84\xb6\x49\xe3\x33\x19\xf3\xee\x25\x2d\x89\x3d\xc0\xd8\x7a\x44\x49\x1f\xc1\xff\xf9\x77\x98\x64\xc6\x66\x23\x15\x23\xee\xdc\xc6\xc5\x31\xcc\x09\xae\x34\x9e\x5d\x22\xf8\x3b\x15\x5a\xcf\x4b\x18\x7c\x06\x00\x00\xff\xff\x61\xf7\xa6\xa0\x7c\x02\x00\x00")

func glgoratFillRepeatVerticalCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatVerticalCsGlsl,
		"glGorat-Fill-Repeat-vertical.cs.glsl",
	)
}

func glgoratFillRepeatVerticalCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatVerticalCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat-vertical.cs.glsl", size: 636, mode: os.FileMode(438), modTime: time.Unix(1524715705, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x6b\x83\x30\x14\xc7\xef\x82\xdf\xe1\x41\x19\xc4\xe1\x5c\xab\x6d\x2f\xd2\xc3\x46\x61\x14\xb6\x5d\xb6\xc1\x6e\x25\xd6\x28\x8f\xc5\x64\x98\x28\xda\xd1\xef\x3e\x62\x66\x0d\xeb\xd8\x45\xf4\xf9\x7e\xef\xff\x7b\xc6\x59\xcb\x6a\x85\x52\xc0\x32\x99\xfb\x9e\xef\xcd\x72\x56\xa0\x60\xf0\x74\xf7\xfe\xb6\x7b\x7e\x5d\xac\x61\xbd\x5a\x25\x2b\xf3\x8a\xd3\x5e\x36\x9a\xd4\x49\x8c\x21\x64\x28\x72\x14\x25\x6c\x60\x1e\x40\x23\xb0\x90\x75\x05\x88\x15\x2d\x59\xbc\x85\x8a\xaa\x8f\x74\x22\xca\x8c\x26\x71\xe1\x42\x0b\x07\xfa\x61\x6a\xa6\x1a\xae\x27\x4a\xe9\x7c\x99\xcc\x5d\x28\x0e\x20\x6b\x8a\x82\xd5\x70\x2f\x1b\x91\xc3\x97\xef\x01\x00\x60\xcb\x0e\x4b\xc8\x4c\x29\xf5\xbd\xd3\xbf\xb9\xc9\x65\x6e\x81\x9c\xb3\xfa\x4c\x01\xe1\xf2\x40\xf9\x5e\xe1\x91\xed\x3b\xa3\x1a\x82\x53\xe9\xad\x3c\x8a\xd4\x7c\x92\x56\x62\x0e\x15\x45\x41\x02\xd7\x26\x86\x4f\xa9\x60\x63\xef\x49\xc9\xf7\x0f\x5c\x66\x94\xef\x44\x2b\x0f\x54\xa3\x14\xbb\x6d\xd4\xf5\x41\xea\x12\x56\xc3\x72\xe6\x7a\x63\x37\x8a\xba\xfe\x8f\x36\xa3\x62\xe6\x9b\x15\x5e\xf0\xc8\x88\x2d\x8f\x13\xcf\xb3\xa2\x0e\xae\x36\x0e\x13\x75\x17\x1d\xfd\xaf\x8e\x31\xae\xe0\x92\x6a\x40\xa1\x99\x50\x26\x6b\x78\x26\x43\xe2\xa3\xa4\x39\x31\x47\x1c\x1a\xd3\x20\xea\x02\xb8\x9d\x7e\x98\x51\x77\x70\xd3\xb2\x66\xc4\x9e\xec\xd0\x1c\xc2\x34\xc1\x86\x86\x93\x4b\x00\xd7\x63\xa0\xd9\xe4\xe4\x7b\xdf\x01\x00\x00\xff\xff\xb9\xa6\x39\x7d\x9e\x02\x00\x00")

func glgoratFillRepeatCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatCsGlsl,
		"glGorat-Fill-Repeat.cs.glsl",
	)
}

func glgoratFillRepeatCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat.cs.glsl", size: 670, mode: os.FileMode(438), modTime: time.Unix(1524715645, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillerCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x5f\x6b\xdb\x30\x14\xc5\x9f\x6b\xf0\x77\x38\xd0\x17\x99\x78\xa9\x9b\x3f\x7d\x71\x33\xd8\xc8\x58\x03\xed\x06\x6d\x07\x7b\x0b\x8a\x2c\xa7\x17\x1c\x69\x28\x72\xa2\x64\xf8\xbb\x0f\x39\xb6\xeb\xae\x0d\x7e\xf1\x95\x7e\xe7\xf8\xdc\x7b\x7d\xb9\x93\x66\x4b\x5a\x61\x32\x4e\xc2\x20\x0c\x2e\x33\x99\x93\x92\x78\xbe\xfb\xf6\xf8\x74\xf7\xf3\x7e\x8e\xd1\xeb\xe1\xc3\x97\xdf\xbf\x16\x3f\x9e\xaf\x6f\x70\x33\x9d\x8e\xa7\x9e\xf7\x4f\xc1\x0f\xba\xb4\xcc\x8c\x47\x14\x63\x45\x2a\x23\xb5\xc6\x0c\x49\x84\x52\x51\xae\xcd\x06\x42\xbf\x48\x23\x95\x05\xd1\x86\xaf\xe5\x68\x0e\xd2\xa5\xfd\x53\xda\xb4\x55\x83\x6d\x6d\x36\x19\x27\x7d\x83\xeb\x08\xab\x32\xcf\xa5\xc1\x57\x5d\xaa\x0c\x7f\xc3\x00\x00\x68\x27\xc5\x04\x2b\x7f\x94\x86\x41\xd5\xb3\x28\xb4\xe0\xc5\x72\x4b\x47\xb9\x74\x5e\x1f\xa3\x77\x72\x38\x39\x92\x4a\xc3\x60\xa7\x29\xc3\x86\x93\x62\x91\x77\xbd\xb8\xba\xc2\xdc\xf0\x3d\x1e\xa5\xb0\x61\x70\x41\xca\x62\x4f\x99\x7d\xc1\x0c\x75\xe0\x27\x3a\x4a\xd6\x44\x8e\x86\x2e\x6d\x18\x6f\x49\xca\xb2\x75\xb1\xfc\x5e\xe8\x15\x2f\x16\x6a\xa7\x05\xb7\xa4\xd5\x62\x3e\x74\x51\xcb\x71\x21\xfc\x3c\xba\xd2\xbf\xe4\xda\x30\x5f\xb8\xfa\x06\x0e\xb7\xa7\x4f\xa6\x0e\x83\x41\xe4\x43\xf9\x5e\xbd\x72\xd0\x84\xb8\xd7\x3c\x6b\x43\xc4\xf5\x14\x46\xcc\xc5\x38\x44\x4d\xa2\x9a\xc7\xcc\x6b\xda\x92\x72\x30\x8e\x5b\x24\x9d\x61\x0b\x7d\xe2\x2d\x53\xbd\x61\x3f\xbf\x2e\xf9\x9d\xa6\xbb\x39\x27\xed\x7e\x9a\xb7\x52\xab\x37\x24\x1e\x48\xb1\x7a\x67\x43\x17\xe3\x34\x9a\x73\xc0\xc1\x37\xf5\x01\xc0\x5d\x03\x1c\xcf\x38\x74\xc0\xbe\xef\x50\xc9\x62\x2b\xff\xef\x25\x79\xd7\x43\xbd\x67\xab\x8d\xfc\x70\xc6\xa7\x62\xc2\x78\x8c\x24\x4e\xe2\x24\xaa\xed\xab\x30\x40\xf5\x2f\x00\x00\xff\xff\xaa\x0a\x35\x77\x43\x03\x00\x00")

func glgoratFillerCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillerCsGlsl,
		"glGorat-Filler.cs.glsl",
	)
}

func glgoratFillerCsGlsl() (*asset, error) {
	bytes, err := glgoratFillerCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Filler.cs.glsl", size: 835, mode: os.FileMode(438), modTime: time.Unix(1524705109, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratStrokerType2CsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xdf\x6b\xe3\x38\x10\xc7\xdf\x03\xf9\x1f\x06\xfa\x22\x35\xaa\x63\x27\x69\x5f\xdc\x1c\xf4\xda\xde\x51\xb8\x6b\x97\x6d\x16\xba\xbb\x94\xe2\xd8\x72\x57\x60\x4b\xc1\x91\x83\xdc\x6d\xfe\xf7\x65\x64\xc9\x76\x5a\xba\x6c\x12\x88\x18\xcf\xaf\xef\x47\xe3\x39\xda\xf1\x6a\x2b\x94\x84\xc5\x3c\x1c\x8f\xc6\xa3\xa3\x8c\xe7\x42\x72\xb8\xfc\xef\xee\xfe\x7a\x75\xf7\xed\xfa\xf3\x1d\x84\x41\x18\x86\x61\xd4\x3f\xfc\xff\xe2\xe1\xcb\xcd\xed\x2a\x3a\x83\xb3\xd3\xd3\xf9\x29\xc6\xe1\xb7\x48\x1a\x55\x6b\x52\xcd\x67\x82\xc1\x5a\xc8\x4c\xc8\x67\x58\x42\x48\xa1\x96\x22\x57\x55\x09\xa9\xfa\xc1\x2b\x2e\x35\x08\x51\x26\xcf\x7c\x76\x05\x42\xd5\x7a\x53\xeb\xd8\x47\x03\xd9\xea\x6c\x31\x0f\x87\x09\x22\x0a\xeb\x3a\xcf\x79\x05\x9f\x94\x90\x7a\x0b\x3f\xc7\x23\x00\x80\x1d\x4f\x67\xb0\xb1\xa6\xef\x8f\xf1\x78\xb4\xff\x6d\x96\x59\x97\xe5\x6f\x55\xcb\xcc\x27\x11\x3b\x9e\x2e\x60\x8d\xa6\x37\x29\x0a\x95\x26\xc5\xd3\x56\xbc\xf0\x27\x83\x5d\x30\x18\x58\x9a\xb6\x2f\x21\x63\x54\x2e\x50\x52\x5a\x24\xe5\x86\xe0\x31\x61\x80\x7f\xa5\x90\xee\x90\x18\x6a\xfd\x76\x4a\x64\x50\x26\x42\x12\x7a\x20\x22\xaf\x54\xc9\x40\x2b\x06\x9a\x97\x9b\xdd\x2c\xee\x7b\x9b\x01\xd6\x83\x25\x58\x62\xf7\xe2\x85\x13\xc7\x8c\x3a\x2f\x0c\x86\xa5\x07\xf1\x5c\x3c\xfd\x5b\xa8\x75\x52\xdc\xc8\x9d\x4a\x13\x2d\x94\xbc\xb9\x0a\xcc\xa3\x73\xd6\x0a\x96\xe0\x7d\xc9\x07\xce\x30\x81\x88\xfa\x08\x91\x03\x11\x5b\x99\x48\x82\x85\x02\x03\xf4\xf5\x15\x5a\x83\x56\x81\xa1\xd4\x09\xc1\x4f\xc5\x75\x5d\x49\x17\xb8\x77\xed\x15\x2a\xd1\x90\x89\x0a\x89\xc5\xe3\xd1\x74\xda\x5b\x37\xc2\x74\x96\x56\x9f\x56\x55\x27\x90\xb5\x00\x48\xc4\x20\xa2\x0c\x49\x2d\xf0\x1c\xb6\x3f\x4a\x07\x0d\xda\xd6\x1a\xf8\x0b\xb4\x0a\x9a\x61\x47\x6d\xdd\x93\x28\xee\x4d\x2d\x62\x58\x5a\x70\x03\xbb\xe3\xa8\xd5\xd0\x17\x71\x1d\xdc\xc9\xde\x17\x45\xf5\x0d\x9c\x80\x2b\x7d\x3e\x7c\x65\xba\xdb\xfd\x08\x4a\xd7\x03\xd1\xca\xe5\xe8\xae\xb3\xe5\xc5\x0b\x9d\x3c\x7c\xed\xaa\x07\x06\xa6\xfe\xd8\x1c\x78\x9a\xcb\xba\xaa\x9c\x9a\xc0\x78\x26\x52\x43\xf3\x4f\x2b\x48\x48\x4d\xf2\x42\xa9\xca\x51\xea\xc1\xa1\xd3\x4a\x1d\xb8\x58\x7e\xde\x61\x3a\x75\x85\x54\x65\xe7\x1a\x87\xde\x66\x8d\x01\x05\x37\x2b\x15\x37\x93\xc9\x10\xf7\xa0\x79\xec\xbd\x14\x92\x58\x13\x69\xec\x4c\xb1\xf6\x7e\xe0\x04\x5f\x09\xff\x84\x32\xc7\x90\xc6\x6f\x13\x99\x5b\x6e\x34\x2c\x9d\xc6\x89\x4f\x7c\xec\xf1\xbc\x0f\x08\x5d\x55\x1b\xc1\xda\x04\x94\x81\x89\xd0\x9e\x98\x43\xfb\xfb\xf0\x2b\x91\xe7\x38\xa7\x30\x05\x92\x72\x51\x10\x13\x61\xb7\x2d\x1b\x13\x52\xab\x62\x18\xe6\xc8\x98\x03\x88\x06\x87\x13\x0c\x9c\xb7\x46\x9f\x88\xc6\xe6\x90\x56\x37\xf6\x17\x5a\x95\x22\xbd\xc8\xb2\xb7\xa3\xef\x96\x8a\xb1\x23\x8f\x8b\x20\x30\x94\xf9\x55\xd3\xf4\xd6\x86\x52\xbb\x6a\x88\x55\x70\x8c\x53\x7f\xdc\xaf\x69\x3a\x6c\x79\xdf\x1f\xfd\xe8\x58\x1a\x83\x01\xdd\xff\xd1\x46\x73\x42\xda\xf1\xb6\xd0\x11\x70\xc2\xf0\x48\x99\x5f\x7a\xfb\x5f\x01\x00\x00\xff\xff\xd5\x6a\x80\xca\x62\x06\x00\x00")

func glgoratStrokerType2CsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratStrokerType2CsGlsl,
		"glGorat-Stroker-type2.cs.glsl",
	)
}

func glgoratStrokerType2CsGlsl() (*asset, error) {
	bytes, err := glgoratStrokerType2CsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Stroker-type2.cs.glsl", size: 1634, mode: os.FileMode(438), modTime: time.Unix(1524811889, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratStrokerCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x7f\x6f\xdb\x36\x10\xfd\xdf\x80\xbf\xc3\x01\xfd\x47\xb4\x65\x59\xb2\xe3\x02\x83\xaa\x02\x59\x9b\x0d\x01\xd6\x64\x58\x3c\x20\xdd\x50\x04\x8c\x45\x65\x04\x24\xd2\x90\x68\x83\xea\xea\xef\x3e\x1c\x49\xc9\xb2\x13\xb9\x6e\x57\xb7\x70\xe8\xd3\xfd\x78\xf7\xee\x91\xd4\xab\x2d\x2b\x2b\x2e\x05\x5c\xcc\xc3\xe1\x60\x38\x78\x95\xb2\x8c\x0b\x06\xef\x7e\xbb\xbd\xbb\x5a\xde\xfe\x75\xf5\xc7\x2d\x84\x41\x18\x86\x61\xf4\xec\xe1\xed\xcd\x15\x84\xc1\x4f\xf8\xd9\x3f\xfb\x70\x79\xff\xe7\xf5\xcd\x32\x7a\x0d\xaf\x17\x8b\xf9\x02\x73\xe2\xbf\x9c\xd6\x72\xa3\xbc\x72\x3e\xe3\x3e\x3c\x72\x91\x72\xf1\x04\x09\x84\x04\x36\x82\x67\xb2\x2c\x60\x25\xff\x61\x25\x13\x0a\x38\x2f\xe8\x13\x9b\xbd\x07\x2e\x37\x6a\xbd\x51\x71\x13\x0d\x5e\xa5\xd2\x8b\x79\xd8\x4d\x10\x11\x78\xdc\x64\x19\x2b\xe1\x77\xc9\x85\xaa\xe0\xdf\xe1\x00\x00\x60\xcb\x56\x33\x58\x1b\xd3\xdf\x9f\xe2\xe1\x60\x77\x32\xcb\xac\xcd\xf2\xb3\xdc\x88\xb4\x49\xc2\xb7\x6c\x75\x01\x8f\x68\x3a\x4a\x91\xcb\x15\xcd\x1f\x2a\xfe\x99\x3d\x68\x44\xe1\x43\xc7\x52\x5b\x5c\x5c\xc4\xd8\x39\xc7\x96\x56\x39\x2d\xd6\x1e\x2e\xa9\x0f\xf8\xa7\xe0\xc2\x2d\xa8\x26\xc6\x6f\x2b\x79\x0a\x05\xe5\xc2\x23\x07\x4d\x64\xa5\x2c\x7c\x50\xd2\x07\xc5\x8a\xf5\x76\x16\xef\xb1\xcd\x00\xeb\x41\x02\x86\xb1\x3b\xfe\x99\x79\x8e\x33\xe2\xbc\x30\x18\x92\x86\x88\xa7\xfc\xe1\xd7\x5c\x3e\xd2\xfc\x5a\x6c\xe5\x8a\x2a\x2e\xc5\xf5\xfb\x40\x7f\x72\xce\x4a\x42\x02\x8d\xaf\xd7\xe3\x0c\x63\x88\x48\x13\xc1\x33\xf0\x78\x25\xa8\xf0\xb0\x50\xa0\x81\x7c\xf9\x02\xd6\xa0\x64\xa0\x09\x71\x8d\xe0\xa7\x64\x6a\x53\x0a\x17\xb8\x73\xf0\x72\x49\x15\xa4\xbc\x44\xc6\xe2\xe1\x60\x3a\xdd\x5b\xd7\x5c\xb7\x16\xdb\x9f\x92\x65\xdb\xa0\x6f\x09\xf0\x22\x1f\x22\xe2\x23\x53\x17\xb8\x0e\xed\x7f\x42\x3a\x00\x0d\xb4\x1a\xde\x82\x92\x41\xdd\x45\x64\xeb\x4e\xa2\x78\x6f\xb2\x14\x43\x62\x88\xeb\xd8\x1d\x8f\x4a\x76\x7d\x91\xae\x83\x99\xec\x9a\xa2\xd8\x7d\x0d\x13\x70\xa5\xdf\x74\xb7\x53\x3b\xdd\x3e\x52\x5a\x0c\x9e\x92\x2e\x47\x3b\x4e\xcb\x17\xcb\x15\xbd\xff\xd8\x56\x0f\x34\x4c\x9b\x65\x7d\xe0\xa9\xdf\x6d\xca\xd2\x75\x13\xe8\x86\x13\xa1\xa0\xfe\xc5\x36\xc4\x85\xf2\xb2\x5c\xca\xd2\xb1\xb4\x27\x0e\x9d\x96\xd8\x61\xc1\x05\x0a\xd7\x5b\x31\x9e\x9b\xbe\x08\xf1\x8d\xee\x82\xba\x71\x9e\x4e\x5d\x51\x59\x1a\x8d\xe3\x06\x30\x15\x62\xc0\xe6\xeb\xa5\x8c\xeb\xf1\xb8\x4b\x7d\xa7\x91\x8f\xae\x86\x31\x79\xb5\xd1\x97\x6f\x67\x05\x13\xdc\x1e\xcd\x13\xe2\x3b\x3e\x49\x7c\x9c\x48\xdf\x30\xad\x20\x71\xfd\x8e\x9b\xc4\xa3\x86\xaa\x4e\x00\xcf\xbc\x1a\xde\xe2\xc9\xd3\x81\xd3\x81\x04\x49\x27\x9a\x97\xf1\x4b\x4e\x3a\x74\x98\x4d\x3d\xdf\x96\x27\x3e\xe8\x08\xed\x54\x1f\xda\x7b\x52\x18\xda\x21\xb1\xec\xeb\xd0\x84\x23\xc7\x90\x18\xa6\x75\x74\x1c\x88\xcc\xea\x90\xbb\xa9\xb9\x04\x26\xac\xb5\x99\x04\xcf\xe2\x32\xf0\xd0\xe7\x4d\x62\xc2\x91\xdf\xa3\xd6\x3b\xb0\x8a\x0c\x4f\xe5\x60\x01\x23\xf0\x1a\x36\x6d\x1b\x30\x69\x40\xc7\xcf\xa3\xcd\x06\xbd\x54\xb2\xe0\xab\xcb\x34\x3d\xde\xa4\xee\xf8\xd3\x21\x37\xdb\xd3\x88\x47\x13\x1f\x70\xa4\x88\xdb\x4b\x61\x02\x29\x8c\x74\x91\x11\x18\xed\xaf\x10\x72\xdc\xca\xb7\x94\xc2\x46\x7b\xcb\x7d\xbd\xd4\x8e\xe5\x15\xeb\xe5\xa9\xc2\x03\x0b\xa6\x48\xac\xe1\xe5\x25\xa0\xed\xa0\x51\x98\xe1\x49\xfa\xac\xab\x14\xec\x03\x17\x9b\xea\xde\x84\xd8\xc4\x59\xaf\x37\x0d\xdb\x49\x55\x30\x3a\x08\x3e\xf8\xd5\x8f\x2c\x32\xc8\x4c\x1d\xab\xbc\x31\x44\xfd\xe5\x8a\xa6\x1c\x56\xd3\x51\x66\xbe\xcc\xcd\xf5\xc3\xc5\x30\x02\x1a\x9e\x21\x84\x0c\x3c\x2b\xfe\x46\xd8\xb3\x97\x84\xfd\x2d\x88\x4e\x6b\x06\xbc\x68\x42\xc3\x09\x2d\xc8\xd7\xc1\xf5\xc9\xa7\x43\x28\x1e\x16\x95\xc9\x1a\x2c\xec\xac\x5f\x4a\xf4\x23\xe1\x53\x9c\x35\x0d\xcf\x80\xbf\x87\x99\x2e\x79\xc1\xee\xf0\x54\x44\xa1\xf5\xb9\xca\x12\xcc\xc9\xaf\xb9\x11\x3b\x8f\x71\xf5\xc6\x4c\x67\x12\xe1\x8f\xc3\xe3\xff\xfb\x1a\xec\x11\x8c\x43\x78\x4e\x4b\xbb\x93\x03\xc1\x3b\x97\x46\x30\x36\x53\xb1\x97\x8e\x69\xc0\xa8\x6b\x02\xf3\xff\x37\x1e\x93\xe9\xb4\xba\x70\x3a\x33\xfc\x3a\x4b\x61\xdf\xbb\xf1\xa2\x3e\x1e\x71\xdf\x15\xa7\x0f\xc5\xee\x76\xef\x00\x68\xde\x33\xcc\x4d\xd1\x79\x9b\xd9\x9d\xf5\xfa\xeb\x84\x61\xdf\x85\xcc\xbd\x8a\x77\x28\xf5\x71\x49\xfc\xe6\x0d\x79\xf7\x5f\x00\x00\x00\xff\xff\x04\xd1\x93\x9e\xab\x0c\x00\x00")

func glgoratStrokerCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratStrokerCsGlsl,
		"glGorat-Stroker.cs.glsl",
	)
}

func glgoratStrokerCsGlsl() (*asset, error) {
	bytes, err := glgoratStrokerCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Stroker.cs.glsl", size: 3243, mode: os.FileMode(438), modTime: time.Unix(1524810539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"glGorat-Fill-Color.cs.glsl": glgoratFillColorCsGlsl,
	"glGorat-Fill-Fixed.cs.glsl": glgoratFillFixedCsGlsl,
	"glGorat-Fill-Gaussian.cs.glsl": glgoratFillGaussianCsGlsl,
	"glGorat-Fill-Nearest.cs.glsl": glgoratFillNearestCsGlsl,
	"glGorat-Fill-NearestNeighbor.cs.glsl": glgoratFillNearestneighborCsGlsl,
	"glGorat-Fill-Repeat-horizontal.cs.glsl": glgoratFillRepeatHorizontalCsGlsl,
	"glGorat-Fill-Repeat-vertical.cs.glsl": glgoratFillRepeatVerticalCsGlsl,
	"glGorat-Fill-Repeat.cs.glsl": glgoratFillRepeatCsGlsl,
	"glGorat-Filler.cs.glsl": glgoratFillerCsGlsl,
	"glGorat-Stroker-type2.cs.glsl": glgoratStrokerType2CsGlsl,
	"glGorat-Stroker.cs.glsl": glgoratStrokerCsGlsl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"glGorat-Fill-Color.cs.glsl": &bintree{glgoratFillColorCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Fixed.cs.glsl": &bintree{glgoratFillFixedCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Gaussian.cs.glsl": &bintree{glgoratFillGaussianCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Nearest.cs.glsl": &bintree{glgoratFillNearestCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-NearestNeighbor.cs.glsl": &bintree{glgoratFillNearestneighborCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat-horizontal.cs.glsl": &bintree{glgoratFillRepeatHorizontalCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat-vertical.cs.glsl": &bintree{glgoratFillRepeatVerticalCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat.cs.glsl": &bintree{glgoratFillRepeatCsGlsl, map[string]*bintree{}},
	"glGorat-Filler.cs.glsl": &bintree{glgoratFillerCsGlsl, map[string]*bintree{}},
	"glGorat-Stroker-type2.cs.glsl": &bintree{glgoratStrokerType2CsGlsl, map[string]*bintree{}},
	"glGorat-Stroker.cs.glsl": &bintree{glgoratStrokerCsGlsl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

