// Code generated by go-bindata.
// sources:
// glGorat-Fill-Color.cs.glsl
// glGorat-Fill-Fixed.cs.glsl
// glGorat-Fill-Gaussian.cs.glsl
// glGorat-Fill-Nearest.cs.glsl
// glGorat-Fill-NearestNeighbor.cs.glsl
// glGorat-Fill-Repeat-horizontal.cs.glsl
// glGorat-Fill-Repeat-vertical.cs.glsl
// glGorat-Fill-Repeat.cs.glsl
// glGorat-Filler.cs.glsl
// glGorat-Stroker-type2.cs.glsl
// glGorat-Stroker.cs.glsl
// DO NOT EDIT!

package shaders

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _glgoratFillColorCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\x41\x6b\xe3\x30\x14\x84\xef\x06\xff\x87\x81\x5c\xe4\xc5\x64\x13\x3b\xc9\xc5\xe4\xb0\x6c\xa0\x04\xda\x5e\xda\x42\x6f\x41\xb6\x65\xf3\xa8\xac\x57\x24\xd9\x24\x2d\xf9\xef\x45\x71\xd2\xf8\x26\x3d\xbd\x6f\x46\x33\xb3\x41\x59\x47\x6c\xb0\xca\x17\x71\x14\x47\xb3\x5a\x35\x64\x14\x9e\xfe\xbd\xbf\xed\x9f\x5f\x97\x1b\x6c\xd6\xeb\x7c\x1d\x9e\xb4\x3c\x71\xef\x85\xcd\x33\x4a\x51\x92\xa9\xc9\xb4\xd8\x62\x91\xa0\x37\xd4\xb0\xed\x40\xd4\xc9\x56\x65\x3b\x74\xd2\x7d\x14\x77\xa2\x2d\x65\x9e\x35\x53\x68\x39\x81\xae\x8c\x55\xae\xd7\xfe\x97\x82\x70\xbe\x5e\xe5\x8b\x29\x95\x25\x28\xfb\xa6\x51\x16\xff\x59\xb3\xc5\x77\x1c\x01\xc0\xa0\xaa\x15\xaa\x30\x29\xe2\xe8\x3c\x51\xd0\x5c\x49\x7d\x70\xf4\xa5\x0e\xc7\x60\x9a\x62\x32\x39\x8d\xdf\x20\x53\x84\x70\x03\x53\x8d\x4e\x92\x11\xc9\x4d\x96\x06\x55\x65\xf8\x64\x87\xed\x78\x16\xad\x3e\x3c\x68\x2e\xa5\xde\x9b\x81\x2b\xe9\x89\xcd\x7e\x37\x3f\x9e\x92\x62\x24\x1a\xcd\xd2\x83\x8c\x57\xc6\x29\x6c\xc7\xbb\xb8\x04\x7c\x64\x59\x8b\x50\x4b\x1a\x14\x93\xf9\x31\xc1\xdf\x7b\xc9\x57\xfe\xb2\xf9\xe2\xd9\x2a\x31\xb6\x71\x59\x4e\xc7\x6c\xf8\x73\x53\x0e\x76\xe7\x38\xfa\x09\x00\x00\xff\xff\x1e\x95\x89\xb2\xbb\x01\x00\x00")

func glgoratFillColorCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillColorCsGlsl,
		"glGorat-Fill-Color.cs.glsl",
	)
}

func glgoratFillColorCsGlsl() (*asset, error) {
	bytes, err := glgoratFillColorCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Color.cs.glsl", size: 443, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillFixedCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x51\x6b\xb3\x30\x14\x86\xef\x05\xff\xc3\x0b\xbd\xd1\x0f\xbf\xae\xd5\xb6\x37\xd2\x8b\x8d\xc2\x28\x6c\xbb\xd9\x06\xbb\x2b\xb1\x46\x39\x2c\x26\x23\x89\xa2\x1b\xfd\xef\x23\x4d\x3b\x85\xc1\x6e\x44\x8f\xe7\xc9\xfb\x9c\x93\x59\xc7\xb5\x21\x25\xb1\xca\x16\x61\x10\x06\xb3\x92\x57\x24\x39\x1e\x6f\xdf\x5e\xf7\x4f\x2f\xcb\x0d\x36\xeb\x75\xb6\x76\xbf\x04\x1b\x54\x6b\x23\x9d\xa5\x94\xa0\x20\x59\x92\xac\xb1\xc5\x22\x46\x2b\xa9\x52\xba\x01\x51\xc3\x6a\x9e\xee\xd0\x30\xf3\x9e\x8f\x44\x5d\xb0\x2c\xad\xa6\xd0\x72\x02\x5d\x18\xcd\x4d\x2b\xec\x48\x19\x5b\xae\xb2\xc5\x14\x4a\x63\x14\x6d\x55\x71\x8d\x3b\xd5\xca\x12\x5f\x61\x00\x00\xd4\xf1\xe3\x0a\x85\x2b\xe5\x61\x70\xfa\x33\x37\xfb\x9d\x5b\x91\x10\x5c\xff\x50\x88\x84\x3a\x32\x71\x30\xf4\xc9\x0f\xbd\x53\x4d\x30\xa9\x0c\x5e\x9e\x64\xee\x56\xd2\x29\x2a\xd1\x30\x92\x51\x3c\xb5\x49\xf1\xa1\x0c\xb6\xfe\x3d\xaa\xc5\xe1\x5e\xa8\x82\x89\xbd\xec\xd4\x91\x59\x52\x72\xbf\x9b\xf7\x43\x9c\x4f\x09\xaf\xe1\x39\xf7\xfc\xef\x27\x9a\xf7\xc3\xa5\xad\x12\x8a\x59\x90\xb4\x5c\x1a\x8e\xad\xff\x8e\xce\x53\x3c\x28\x56\x46\x6e\xe7\x89\x43\xe3\x79\x1f\xe3\x66\xbc\xc1\x6b\x8c\xeb\x7c\xb6\x4a\xf3\xc8\xaf\xfa\xdc\x9c\x60\x3c\xc1\x2b\x24\xa3\x4a\x8c\x7f\xd7\x40\x27\x7b\x0a\x83\xef\x00\x00\x00\xff\xff\x83\x54\x7f\x94\x2f\x02\x00\x00")

func glgoratFillFixedCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillFixedCsGlsl,
		"glGorat-Fill-Fixed.cs.glsl",
	)
}

func glgoratFillFixedCsGlsl() (*asset, error) {
	bytes, err := glgoratFillFixedCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Fixed.cs.glsl", size: 559, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillGaussianCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x5b\x6b\xf3\x38\x10\x7d\x0f\xe4\x3f\x0c\xf4\x45\x6a\x1c\xe7\xde\x17\x6f\x1e\x76\x29\x6c\x0b\x7b\x29\xdb\x36\xec\x5b\x51\x62\x39\x88\x95\xa5\x22\xdb\xa9\x94\xd2\xff\xbe\x8c\xe4\x5b\x2e\x14\x3e\xf8\x5a\x28\xf2\x68\xce\x99\x73\xa4\xd1\xf4\xe6\xc0\x4d\x21\xb4\x82\xe5\x62\x3a\x1c\x0c\x07\x37\x29\xcf\x84\xe2\xf0\xe7\xaf\xff\xbe\x3e\xfe\xf5\x32\xbb\x83\xbb\xd5\x6a\xb1\xea\x36\x9e\x5f\x9f\x9e\xfe\xfe\xe7\x05\x66\x98\x2d\x99\xd3\x55\x49\xcc\x62\x2e\x22\xd8\x0a\x95\x0a\xb5\x87\x35\x4c\x29\x54\x4a\x64\xda\xe4\x20\x44\xce\xf6\x7c\x7e\x0f\x39\x2b\xfe\x4b\x3a\xc4\x7e\xcb\x16\xf3\xac\x0f\x9a\xf5\x40\x35\xc6\xf0\xa2\x92\x65\x87\x2a\xca\x74\xb9\x98\xf6\x41\x73\x0a\xdb\x2a\xcb\xb8\x81\xdf\x74\xa5\x52\xf8\x1c\x0e\x00\x00\xc4\x81\xef\x96\xb0\xc5\x50\x32\x1c\x7c\x7d\x5b\x77\x71\x59\x37\x13\x52\x72\xd3\xa2\x80\x48\xbd\x63\xf2\xad\x10\x47\xfe\x66\x51\x6a\x04\xbd\x88\x0b\xe2\x85\x4a\xf0\x48\x32\xa9\x59\x09\x99\x22\x61\x61\xa9\x8f\x1e\xb4\x48\x21\x67\x42\x11\xda\xd7\x38\x87\x77\x5d\xc0\x3a\xac\xc9\x5e\xbe\xfd\x2e\xf5\x96\xc9\x47\x75\xd0\x3b\x56\x0a\xad\x1e\xef\x63\xeb\x90\xa2\x43\x04\x71\x01\x87\x7f\xc7\xc1\x67\x6c\xdd\x95\x34\x14\x88\xfc\x68\xec\x59\x1c\x39\x09\xe1\x86\xd1\x67\xa6\x5c\x96\x0c\xd6\xfe\x83\x84\x38\xfe\x78\xfd\xa4\xa3\x89\x2d\x85\x49\x1d\x0d\x15\x8f\x5d\x6d\x1a\x7d\x03\x74\xe7\xc0\x8f\x16\xe8\x68\xc0\x9d\x08\x2a\x76\x4c\xf2\x4b\x41\x39\xb3\xc4\x6b\x8d\x6d\x04\xb3\x7e\xc5\x6e\xc7\xe1\xce\x15\x4a\xc3\xd2\x4b\xc2\x1d\x17\x92\xf8\x62\xb1\x85\xdb\xa6\xb3\xfb\xc4\xbd\x0c\xd7\xcb\xb8\x52\xe0\xc0\x64\xd5\x6a\x6e\xaf\xc8\xf3\xb6\x9a\xbb\xb0\x83\x36\x7e\x76\xbb\x86\xa9\x3d\x7f\x68\x5b\x42\xa8\x92\x78\xea\xd8\x8e\x0d\x4b\x63\x3b\x9a\xc6\x2b\x1a\x41\x2f\x3e\xf2\x71\x7a\x85\x66\x73\x85\xc6\x79\x1a\x77\x41\xe3\x3c\x8d\x6b\x69\x26\x93\xd6\xdc\x12\x76\x5a\x6a\x13\xcc\x2d\xc9\x34\xf2\xbf\x4d\x62\x68\xf3\xa2\xca\xf1\xdd\xb7\x60\x78\xd0\x46\x1c\xb5\x2a\x99\xc4\xbd\x3a\x55\x1b\x54\x02\xf8\x84\x82\xcf\xd8\x26\x60\xe1\x97\xe6\xcb\x25\x76\x34\xa2\x9f\x67\xad\x04\x4a\x9b\x9c\x49\x58\x83\x85\x31\xd4\xae\x93\xf3\x24\xc3\xf1\x41\x64\x8a\x84\x6c\xda\x4b\x08\xf2\x47\xf5\x33\xf8\x43\xb3\xb4\xbe\xa1\xa8\x3e\x1e\x7b\x72\x12\x94\x52\xb8\x45\xbe\x1e\x05\xfa\x1b\xad\x7b\xc1\xaf\xd6\xe9\x86\x9b\x52\xec\xae\xf9\x74\x8d\xcf\x0d\xfa\x74\x8d\xcf\x4d\xec\x12\xf7\xad\x4f\xd7\xfa\x74\x3f\xd5\x67\xaf\x6b\x68\x04\xee\x07\x7c\x06\xea\xc9\x1a\x13\x4e\x2e\x5e\xa8\x92\xab\x02\x3b\x3f\x3c\xf0\xae\x34\x0e\xfc\x08\x27\x14\x0d\x93\xa3\xfd\x8f\xd2\x34\xaa\x9f\x49\xa5\x36\x9c\x84\x39\xef\x93\xa3\xba\xd4\x6d\xc3\x8c\x06\xbf\xae\x0e\xd6\xfa\xfc\xb0\x9b\x72\xa1\x88\x1f\x0a\x49\x17\x63\xdb\x82\xd8\xd3\x2e\xdd\x32\xaf\xf4\x5d\x7f\x90\x69\xbc\x8a\x60\xd9\x6c\x1b\x5e\x56\x46\x01\x69\x77\x70\x61\x23\x98\x53\x8a\xa3\x8a\x15\x1c\x1d\x90\x19\x8c\xfd\x1a\x25\xfd\x1f\x00\x00\xff\xff\x44\x65\xc1\x63\x39\x07\x00\x00")

func glgoratFillGaussianCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillGaussianCsGlsl,
		"glGorat-Fill-Gaussian.cs.glsl",
	)
}

func glgoratFillGaussianCsGlsl() (*asset, error) {
	bytes, err := glgoratFillGaussianCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Gaussian.cs.glsl", size: 1849, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillNearestCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x5d\x6b\xdb\x30\x14\x7d\x0f\xe4\x3f\x5c\xe8\x8b\xd4\x38\xce\x77\x5f\xb2\x3c\x6c\x14\xd6\xc2\x3e\xca\xda\x86\xbd\x15\x25\x96\x83\x98\x22\x0d\xd9\xce\xa4\x94\xfc\xf7\x21\xc9\x96\xd5\xc4\x14\x06\x4b\x20\xd8\x57\xf7\x9c\x7b\x8e\x74\x75\x73\x75\xa0\xaa\x60\x52\xc0\x7c\x36\xee\xf7\xfa\xbd\xab\x8c\xe6\x4c\x50\xf8\xfa\xf1\xe7\xf3\xfd\xb7\xa7\xc9\x0d\xdc\x2c\x16\xb3\x45\xbb\xf0\xf8\xfc\xf0\xf0\xfd\xc7\x13\x4c\x6c\x36\x27\x46\x56\x25\x52\xb3\x29\x4b\x60\xc3\x44\xc6\xc4\x0e\x56\x30\xc6\x50\x09\x96\x4b\xb5\x07\xc6\xf6\x64\x47\xa7\xb7\xb0\x27\xc5\xaf\x65\x8b\xd8\x6d\xc8\x6c\x9a\xc7\xa0\x49\x04\xaa\x31\x8a\x16\x15\x2f\x5b\x54\x51\x66\xf3\xd9\x38\x06\x4d\x31\x6c\xaa\x3c\xa7\x0a\x3e\xc9\x4a\x64\xf0\xda\xef\x01\x00\xb0\x03\xdd\xce\x61\x63\x43\xcb\x7e\xef\xf4\x6e\xdd\xd9\x65\xdd\x9c\x71\x4e\x55\x40\x01\xe2\x72\x4b\xf8\x4b\xc1\x8e\xf4\x45\x5b\xa9\x09\x44\x11\xe3\xc5\x33\xb1\xb4\x5b\x92\x73\x49\x4a\xc8\x05\xf2\x0f\x1a\xbb\xe8\x41\xb2\x0c\xf6\x84\x09\x84\x63\x8d\x53\xf8\x2d\x0b\x58\xf9\x67\xb4\xe3\x2f\x9f\xb9\xdc\x10\x7e\x2f\x0e\x72\x4b\x4a\x26\xc5\xfd\x6d\xaa\x8d\xa5\x68\x11\x5e\x9c\xc7\xd9\xdf\xa1\xf7\x99\x6a\xd3\x91\x66\x05\x5a\x7e\x6b\xec\x91\x1d\x29\xf2\xe1\x86\xd1\x65\x66\x94\x97\x04\x56\xee\x05\xf9\xb8\xfd\x38\xfd\xa8\xa5\x49\x35\x86\x51\x1d\xf5\x15\x8f\x6d\x6d\x9c\xbc\x03\x34\xe7\xc0\x3f\x01\x68\xb0\xc7\xbd\x11\x54\x6c\x09\xa7\x97\x82\xf6\x44\x23\xa7\x35\xd5\x09\x4c\xe2\x8a\xed\x8a\xb1\x2b\x1d\x94\x8a\x64\x97\x84\x5b\xca\x38\x72\xc5\x52\x0d\xd7\x4d\x67\xc7\xc4\x51\x86\x89\x32\x3a\x0a\x1c\x08\xaf\x82\xe6\x70\x44\x8e\x37\x68\x6e\xc3\x06\x42\xfc\xec\x74\x15\x11\x3b\x7a\x17\x5a\x82\x89\x12\x39\xea\x54\x0f\x15\xc9\x52\x3d\x18\xa7\x0b\x9c\x40\x14\x1f\xb8\x38\xee\xa0\x59\x77\xd0\x18\x47\x63\x2e\x68\x8c\xa3\x31\x81\x66\x34\x0a\xe6\xe6\xb0\x95\x5c\x2a\x6f\x6e\x8e\xc6\x89\xfb\x36\x89\xbe\xcd\x8b\x6a\x6f\xef\x7d\x00\xc3\x9d\x54\xec\x28\x45\x49\xb8\x5d\xab\x53\xa5\xb2\x4a\xc0\x5e\x21\xef\x33\xd5\x4b\xd0\xf0\xa1\x79\x33\x4b\x3d\x18\xe0\xd7\xb3\x56\x02\x21\xd5\x9e\x70\x58\x81\x86\x21\xd4\xae\x97\xe7\x49\x8a\xda\x0b\x91\x0b\xe4\xb3\x71\x94\xe0\xe5\x0f\xea\x6b\xf0\x45\x92\xac\x3e\xa1\xa4\xde\x1e\xfd\x66\x27\x30\xc6\x70\x6d\xf9\x22\x0a\xeb\x6f\xb0\x8a\x82\xa7\xe0\x74\x4d\x55\xc9\xb6\x5d\x3e\x4d\xe3\x73\x6d\x7d\x9a\xc6\xe7\x3a\x35\x4b\xf3\xae\x4f\x13\x7c\x9a\xff\xea\x33\xea\x1a\x9c\x80\xf9\x07\x9f\x9e\x7a\xb4\xb2\x09\x6f\x0e\x9e\x89\x92\x8a\xc2\x76\xbe\xbf\xe0\x6d\x69\x3b\xf0\x13\x3b\xa1\xb0\x9f\x1c\xe1\x1f\xa5\x69\x54\x37\x93\x4a\xa9\x28\xf2\x73\xde\x25\x27\x75\xa9\xeb\x86\xd9\x1a\x3c\x75\x0e\xd6\x7a\xff\x6c\x37\xd9\x01\xa0\x13\x08\x4d\xd9\xc4\x26\x30\x84\x38\xae\x68\x59\x29\x01\xb6\x7b\x4e\x7f\x03\x00\x00\xff\xff\xc6\x9b\xc9\xee\xfa\x06\x00\x00")

func glgoratFillNearestCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillNearestCsGlsl,
		"glGorat-Fill-Nearest.cs.glsl",
	)
}

func glgoratFillNearestCsGlsl() (*asset, error) {
	bytes, err := glgoratFillNearestCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Nearest.cs.glsl", size: 1786, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillNearestneighborCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x51\x6b\xab\x30\x14\xc7\xdf\x05\xbf\xc3\x81\xbe\x24\xf7\x7a\xad\xd5\xda\x17\xe9\xc3\xbd\x14\x2e\x85\x6d\x2f\xdb\x60\x6f\x25\xd6\x28\x87\xc5\x64\x68\x74\xda\xd1\xef\x3e\x62\x6c\x95\x16\xf6\x52\xd2\xe3\xff\x97\xf3\x3b\x87\x2c\x5a\x5e\xd5\xa8\x24\xac\xa3\xc0\x75\x5c\x67\x91\xf1\x1c\x25\x87\xc7\xbf\x6f\xaf\xfb\xa7\x97\xd5\x06\x36\x71\x1c\xc5\xe6\x93\x60\xbd\x6a\x34\xa9\xa2\x10\x3d\x48\x51\x66\x28\x0b\xd8\x42\x40\xa1\x91\x98\xab\xaa\x04\xc4\x92\x15\x3c\xdc\x41\xc9\xea\xf7\x64\x22\x8a\x94\x45\x61\x3e\x87\x56\x33\x68\x64\x2a\x5e\x37\x42\x4f\x54\xad\xb3\x75\x14\xcc\xa1\x90\x42\xda\xe4\x39\xaf\xe0\x9f\x6a\x64\x06\x5f\xae\x03\x00\x80\x2d\x3f\xae\x21\x35\xa5\xc4\x75\xce\x3f\xf6\x8d\xee\xfb\xe6\x28\x04\xaf\xae\x14\x10\xa1\x8e\x4c\x1c\x6a\x3c\xf1\x43\x67\x54\x3d\x98\x55\x7a\x2b\x8f\x32\x31\x2b\x69\x15\x66\x50\x32\x94\x84\xce\x6d\x42\xf8\x50\x35\x6c\xed\x99\x14\xe2\xf0\x5f\xa8\x94\x89\xbd\x6c\xd5\x91\x69\x54\x72\xbf\xf3\xbb\x9e\x26\x73\xc2\x6a\x58\xce\xfc\xfe\xb1\x13\xf9\x5d\x3f\xc6\x96\xcb\xfb\xb8\x51\x32\x7d\xcc\x28\xcf\x78\xe2\xc4\x96\xe9\x0d\x32\x10\x19\x17\x9a\xc1\x76\xf8\x43\x72\xa1\x98\x26\xd3\x25\x7e\x47\x61\x09\xb6\x6a\xfb\x9e\x26\x03\xea\xc1\x5d\xbe\xbf\xcd\x7f\x5e\xf3\x3d\xbd\xed\x3f\xe4\x00\xa5\xe6\xb2\x36\xbe\x96\x1b\xac\x1f\x14\xcb\x88\x79\x2e\x9e\x99\x9a\x5a\x8f\xeb\xe3\xbb\x6c\x68\x98\x4f\xab\x8a\x13\xfb\x4a\x86\xb0\x07\xd3\x0d\xd6\xcc\x1b\xb7\x43\x88\x1d\xf2\xb2\x52\x0a\xbf\x21\xf0\x63\x0a\xbf\xec\x16\xa8\x39\x8d\x3a\xc6\xf5\xec\x3a\xdf\x01\x00\x00\xff\xff\x91\xd2\x23\x07\x08\x03\x00\x00")

func glgoratFillNearestneighborCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillNearestneighborCsGlsl,
		"glGorat-Fill-NearestNeighbor.cs.glsl",
	)
}

func glgoratFillNearestneighborCsGlsl() (*asset, error) {
	bytes, err := glgoratFillNearestneighborCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-NearestNeighbor.cs.glsl", size: 776, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatHorizontalCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xdf\x6b\xab\x30\x14\xc7\xdf\x05\xff\x87\x03\xe5\x42\xbc\x78\xbd\xad\xb6\x7d\x91\x3e\x6c\x14\x46\x61\xdb\xcb\x36\xd8\x5b\x89\x35\xca\x61\x31\x19\x49\x14\xed\xe8\xff\x3e\x62\x66\x0d\x6c\xec\x45\xf4\x78\x3e\xdf\xf3\xc9\x8f\x45\xc7\x94\x46\x29\x60\x9d\x2d\xc3\x20\x0c\x16\x25\xab\x50\x30\x78\xb8\x79\x7d\x39\x3c\x3e\xaf\xb6\xb0\xdd\x6c\xb2\x8d\xfd\xc5\xe9\x20\x5b\x43\x54\x96\x62\x0c\x05\x8a\x12\x45\x0d\x3b\x58\x46\xd0\x0a\xac\xa4\x6a\x00\xb1\xa1\x35\x4b\xf7\xd0\x50\xfd\x96\xcf\x44\x5d\xd0\x2c\xad\x7c\x68\xe5\x41\x5f\x8c\x62\xba\xe5\x66\xa6\xb4\x29\xd7\xd9\xd2\x87\xd2\x08\x8a\xb6\xaa\x98\x82\x5b\xd9\x8a\x12\x3e\xc2\x00\x00\x00\x3b\x76\x5a\x43\x61\x4b\x79\x18\x5c\x7e\x9d\x9b\x7d\x9f\x5b\x21\xe7\x4c\x5d\x29\x20\x5c\x9e\x28\x3f\x6a\x3c\xb3\x63\x6f\x55\x63\xf0\x2a\x83\x93\x47\x91\xdb\x2d\xe9\x24\x96\xd0\x50\x14\x24\xf2\x6d\x52\x78\x97\x1a\x76\xee\x9d\xd4\xfc\x78\xc7\x65\x41\xf9\x41\x74\xf2\x44\x0d\x4a\x71\xd8\x27\xfd\x10\xe5\x3e\xe1\x34\x1c\x67\x9f\xff\xdc\x8a\x92\x7e\xf8\xa1\xcd\xaa\xd8\x7c\xbb\x84\x27\x3c\x33\xe2\xca\x53\xe2\x35\x2b\xe9\xe1\xcf\xce\x63\x92\x7e\xea\xe0\x92\x1a\x40\x61\x98\xd0\x36\x69\xfc\x26\x63\xde\xbd\xa4\x25\xb1\x07\x18\x5b\x8f\x28\xe9\x23\xf8\x3f\x5f\x87\x49\x66\x9c\x6c\xa4\x62\xc4\x9d\xdb\xd8\x1c\xc3\x9c\xe0\x86\xc6\xb3\x4b\x04\x7f\xa7\x81\xd6\xf3\x62\xf7\xef\x33\x00\x00\xff\xff\xeb\x7b\x91\x12\x7e\x02\x00\x00")

func glgoratFillRepeatHorizontalCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatHorizontalCsGlsl,
		"glGorat-Fill-Repeat-horizontal.cs.glsl",
	)
}

func glgoratFillRepeatHorizontalCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatHorizontalCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat-horizontal.cs.glsl", size: 638, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatVerticalCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x51\x6b\xab\x30\x18\x86\xef\x05\xff\xc3\x07\xe5\x40\x3c\x78\x3c\xad\xb6\xbd\x91\x5e\x6c\x14\x46\x61\xdb\xcd\x36\xd8\x5d\x89\x35\xca\xc7\x62\x32\x92\x28\xda\xd1\xff\x3e\x62\x66\x0d\x6c\xec\x46\xf4\x33\xcf\xfb\x3e\x31\x2e\x3a\xa6\x34\x4a\x01\xeb\x6c\x19\x06\x61\xb0\x28\x59\x85\x82\xc1\xc3\xcd\xeb\xcb\xe1\xf1\x79\xb5\x85\xed\x66\x93\x6d\xec\x2b\x4e\x07\xd9\x1a\xa2\xb2\x14\x63\x28\x50\x94\x28\x6a\xd8\xc1\x32\x82\x56\x60\x25\x55\x03\x88\x0d\xad\x59\xba\x87\x86\xea\xb7\x7c\x26\xea\x82\x66\x69\xe5\x43\x2b\x0f\xfa\x62\x14\xd3\x2d\x37\x33\xa5\x4d\xb9\xce\x96\x3e\x94\x46\x50\xb4\x55\xc5\x14\xdc\xca\x56\x94\xf0\x11\x06\x00\x00\xd8\xb1\xd3\x1a\x0a\x3b\xca\xc3\xe0\xf2\x6b\x6f\xf6\xbd\xb7\x42\xce\x99\xba\x52\x40\xb8\x3c\x51\x7e\xd4\x78\x66\xc7\xde\xaa\xc6\xe0\x4d\x06\x27\x8f\x22\xb7\x9f\xa4\x93\x58\x42\x43\x51\x90\xc8\xb7\x49\xe1\x5d\x6a\xd8\xb9\x7b\x52\xf3\xe3\x1d\x97\x05\xe5\x07\xd1\xc9\x13\x35\x28\xc5\x61\x9f\xf4\x43\x94\xfb\x84\xd3\x70\x9c\xbd\xfe\x73\x3b\x4a\xfa\xe1\x87\x65\x56\xc5\xe6\xdb\x2d\x3c\xe1\x99\x11\x37\x9e\x12\xaf\x59\xc9\x00\x7f\x76\x1e\x93\x4c\x61\x15\x97\xd4\x00\x0a\xc3\x84\xb6\x49\xe3\x33\x19\xf3\xee\x25\x2d\x89\x3d\xc0\xd8\x7a\x44\x49\x1f\xc1\xff\xf9\x77\x98\x64\xc6\x66\x23\x15\x23\xee\xdc\xc6\xc5\x31\xcc\x09\xae\x34\x9e\x5d\x22\xf8\x3b\x15\x5a\xcf\x4b\x18\x7c\x06\x00\x00\xff\xff\x61\xf7\xa6\xa0\x7c\x02\x00\x00")

func glgoratFillRepeatVerticalCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatVerticalCsGlsl,
		"glGorat-Fill-Repeat-vertical.cs.glsl",
	)
}

func glgoratFillRepeatVerticalCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatVerticalCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat-vertical.cs.glsl", size: 636, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x6b\x83\x30\x14\xc7\xef\x82\xdf\xe1\x41\x19\xc4\xe1\x5c\xab\x6d\x2f\xd2\xc3\x46\x61\x14\xb6\x5d\xb6\xc1\x6e\x25\xd6\x28\x8f\xc5\x64\x98\x28\xda\xd1\xef\x3e\x62\x66\x0d\xeb\xd8\x45\xf4\xf9\x7e\xef\xff\x7b\xc6\x59\xcb\x6a\x85\x52\xc0\x32\x99\xfb\x9e\xef\xcd\x72\x56\xa0\x60\xf0\x74\xf7\xfe\xb6\x7b\x7e\x5d\xac\x61\xbd\x5a\x25\x2b\xf3\x8a\xd3\x5e\x36\x9a\xd4\x49\x8c\x21\x64\x28\x72\x14\x25\x6c\x60\x1e\x40\x23\xb0\x90\x75\x05\x88\x15\x2d\x59\xbc\x85\x8a\xaa\x8f\x74\x22\xca\x8c\x26\x71\xe1\x42\x0b\x07\xfa\x61\x6a\xa6\x1a\xae\x27\x4a\xe9\x7c\x99\xcc\x5d\x28\x0e\x20\x6b\x8a\x82\xd5\x70\x2f\x1b\x91\xc3\x97\xef\x01\x00\x60\xcb\x0e\x4b\xc8\x4c\x29\xf5\xbd\xd3\xbf\xb9\xc9\x65\x6e\x81\x9c\xb3\xfa\x4c\x01\xe1\xf2\x40\xf9\x5e\xe1\x91\xed\x3b\xa3\x1a\x82\x53\xe9\xad\x3c\x8a\xd4\x7c\x92\x56\x62\x0e\x15\x45\x41\x02\xd7\x26\x86\x4f\xa9\x60\x63\xef\x49\xc9\xf7\x0f\x5c\x66\x94\xef\x44\x2b\x0f\x54\xa3\x14\xbb\x6d\xd4\xf5\x41\xea\x12\x56\xc3\x72\xe6\x7a\x63\x37\x8a\xba\xfe\x8f\x36\xa3\x62\xe6\x9b\x15\x5e\xf0\xc8\x88\x2d\x8f\x13\xcf\xb3\xa2\x0e\xae\x36\x0e\x13\x75\x17\x1d\xfd\xaf\x8e\x31\xae\xe0\x92\x6a\x40\xa1\x99\x50\x26\x6b\x78\x26\x43\xe2\xa3\xa4\x39\x31\x47\x1c\x1a\xd3\x20\xea\x02\xb8\x9d\x7e\x98\x51\x77\x70\xd3\xb2\x66\xc4\x9e\xec\xd0\x1c\xc2\x34\xc1\x86\x86\x93\x4b\x00\xd7\x63\xa0\xd9\xe4\xe4\x7b\xdf\x01\x00\x00\xff\xff\xb9\xa6\x39\x7d\x9e\x02\x00\x00")

func glgoratFillRepeatCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatCsGlsl,
		"glGorat-Fill-Repeat.cs.glsl",
	)
}

func glgoratFillRepeatCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat.cs.glsl", size: 670, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillerCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x5f\x6b\xdb\x30\x14\xc5\x9f\x6b\xf0\x77\x38\xd0\x17\x99\x78\xa9\x9b\x3f\x7d\x71\x33\xd8\xc8\x58\x03\xed\x06\x6d\x07\x7b\x0b\x8a\x2c\xa7\x17\x1c\x69\x28\x72\xa2\x64\xf8\xbb\x0f\x39\xb6\xeb\xae\x0d\x7e\xf1\x95\x7e\xe7\xf8\xdc\x7b\x7d\xb9\x93\x66\x4b\x5a\x61\x32\x4e\xc2\x20\x0c\x2e\x33\x99\x93\x92\x78\xbe\xfb\xf6\xf8\x74\xf7\xf3\x7e\x8e\xd1\xeb\xe1\xc3\x97\xdf\xbf\x16\x3f\x9e\xaf\x6f\x70\x33\x9d\x8e\xa7\x9e\xf7\x4f\xc1\x0f\xba\xb4\xcc\x8c\x47\x14\x63\x45\x2a\x23\xb5\xc6\x0c\x49\x84\x52\x51\xae\xcd\x06\x42\xbf\x48\x23\x95\x05\xd1\x86\xaf\xe5\x68\x0e\xd2\xa5\xfd\x53\xda\xb4\x55\x83\x6d\x6d\x36\x19\x27\x7d\x83\xeb\x08\xab\x32\xcf\xa5\xc1\x57\x5d\xaa\x0c\x7f\xc3\x00\x00\x68\x27\xc5\x04\x2b\x7f\x94\x86\x41\xd5\xb3\x28\xb4\xe0\xc5\x72\x4b\x47\xb9\x74\x5e\x1f\xa3\x77\x72\x38\x39\x92\x4a\xc3\x60\xa7\x29\xc3\x86\x93\x62\x91\x77\xbd\xb8\xba\xc2\xdc\xf0\x3d\x1e\xa5\xb0\x61\x70\x41\xca\x62\x4f\x99\x7d\xc1\x0c\x75\xe0\x27\x3a\x4a\xd6\x44\x8e\x86\x2e\x6d\x18\x6f\x49\xca\xb2\x75\xb1\xfc\x5e\xe8\x15\x2f\x16\x6a\xa7\x05\xb7\xa4\xd5\x62\x3e\x74\x51\xcb\x71\x21\xfc\x3c\xba\xd2\xbf\xe4\xda\x30\x5f\xb8\xfa\x06\x0e\xb7\xa7\x4f\xa6\x0e\x83\x41\xe4\x43\xf9\x5e\xbd\x72\xd0\x84\xb8\xd7\x3c\x6b\x43\xc4\xf5\x14\x46\xcc\xc5\x38\x44\x4d\xa2\x9a\xc7\xcc\x6b\xda\x92\x72\x30\x8e\x5b\x24\x9d\x61\x0b\x7d\xe2\x2d\x53\xbd\x61\x3f\xbf\x2e\xf9\x9d\xa6\xbb\x39\x27\xed\x7e\x9a\xb7\x52\xab\x37\x24\x1e\x48\xb1\x7a\x67\x43\x17\xe3\x34\x9a\x73\xc0\xc1\x37\xf5\x01\xc0\x5d\x03\x1c\xcf\x38\x74\xc0\xbe\xef\x50\xc9\x62\x2b\xff\xef\x25\x79\xd7\x43\xbd\x67\xab\x8d\xfc\x70\xc6\xa7\x62\xc2\x78\x8c\x24\x4e\xe2\x24\xaa\xed\xab\x30\x40\xf5\x2f\x00\x00\xff\xff\xaa\x0a\x35\x77\x43\x03\x00\x00")

func glgoratFillerCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillerCsGlsl,
		"glGorat-Filler.cs.glsl",
	)
}

func glgoratFillerCsGlsl() (*asset, error) {
	bytes, err := glgoratFillerCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Filler.cs.glsl", size: 835, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratStrokerType2CsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\xdf\x4f\xf3\x36\x14\x7d\xaf\xd4\xff\xe1\x4a\xbc\xd8\x34\xa4\x49\x5b\x78\x09\x9d\xc4\x80\x4d\x48\x1b\x4c\xa3\x93\xd8\x26\x84\xd2\xc4\x61\x57\x4a\xec\x2a\x75\x3a\x87\x8f\xfe\xef\x9f\xae\x63\xa7\x29\x88\xaf\xad\x54\xeb\xe4\xfe\x38\xe7\xf8\xe6\x9e\xec\x44\xbd\x45\x25\x61\x31\x8f\xc6\xa3\xf1\xe8\x24\x17\x05\x4a\x01\xd7\xbf\x3d\x3c\xde\xae\x1e\xfe\xb9\xfd\xf3\x01\xa2\x30\x8a\xa2\x28\x3e\x3c\xfc\xfd\xea\xe9\xaf\xbb\xfb\x55\x7c\x01\x17\xe7\xe7\xf3\x73\xca\xa3\x6f\x99\xb6\xaa\xd1\xac\x9e\xcf\x30\x80\x35\xca\x1c\xe5\x2b\x2c\x21\xe2\xd0\x48\x2c\x54\x5d\x41\xa6\xfe\x13\xb5\x90\x1a\x10\xab\xf4\x55\xcc\x6e\x00\x55\xa3\x37\x8d\x4e\x7c\x36\xb0\xad\xce\x17\xf3\x68\x58\x20\xe6\xb0\x6e\x8a\x42\xd4\xf0\x87\x42\xa9\xb7\xf0\x6d\x3c\x02\x00\xd8\x89\x6c\x06\x1b\x0b\xfd\xfb\x9c\x8c\x47\xfb\x1f\x56\x99\xf5\x55\x7e\x56\x8d\xcc\x7d\x11\xdc\x89\x6c\x01\x6b\x82\x3e\x94\x28\x55\x96\x96\x2f\x5b\x7c\x13\x2f\x86\x58\x04\x30\x40\xda\x8e\x17\xca\x84\x94\x23\x49\xca\xca\xb4\xda\x30\x3a\xa6\x01\xd0\x5f\x85\xd2\x1d\x52\xc3\x6d\xdc\x4e\x61\x0e\x55\x8a\x92\xf1\x23\x11\x45\xad\xaa\x00\xb4\x0a\x40\x8b\x6a\xb3\x9b\x25\xdd\x33\x82\x61\xe9\x25\xbe\x96\x2f\xbf\x96\x6a\x9d\x96\x77\x72\xa7\xb2\x54\xa3\x92\x77\x37\xa1\x79\x76\xc1\x5a\xc1\x12\x7c\x2c\xfb\x22\x18\x26\x10\x73\x9f\x81\x05\x30\xdc\xca\x54\x32\x6a\x14\x1a\xe0\xef\xef\xd0\x01\x5a\x85\x86\x73\x47\x91\x3e\xb5\xd0\x4d\x2d\x5d\xe2\xde\xd1\x2b\x55\xaa\x21\xc7\x9a\xbc\x48\xc6\xa3\xe9\xf4\x80\x6e\xd0\xf4\x88\xbd\xeb\x47\xad\x6a\xc1\xdc\x75\x07\xd6\xf6\x19\x8b\x03\x88\x79\x40\x1e\x2c\xe8\x1c\x75\x3f\xce\x07\x04\x2d\xb5\x16\x7e\x02\xad\xc2\x76\xc8\xa8\xeb\x7b\x16\x27\x07\xa8\x33\x0f\x96\xd6\xb8\x01\xee\x7c\xd4\x6a\x18\x4b\x76\x1d\xb9\xbd\xf7\x4d\x49\x7d\x0b\x67\xe0\x5a\x5f\x0e\x5f\x86\xfe\xde\xbe\x32\xa5\xe7\xc0\xb4\x72\x35\xbc\x1c\xe7\x97\x28\x75\xfa\xf4\x77\xdf\x3d\x34\x30\xf5\xc7\xf6\x28\xd2\x5c\x37\x75\xed\xd4\x84\xc6\x7b\x22\x35\xb4\xbf\x74\x82\x50\x6a\x56\x94\x4a\xd5\xce\xa5\x83\x71\x14\xb4\x52\x47\x21\xd6\x3f\x1f\x30\x9d\xba\x46\xaa\xb6\x13\x4b\xe3\x6c\xab\x26\x40\x82\xdb\x95\x4a\xda\xc9\x64\x68\xf7\x80\x3c\x71\xaf\x50\x32\x0b\xb1\xd6\xce\x54\xd0\xdd\x0f\x9c\xd1\xb0\xfb\x27\x3c\x70\x1e\xf2\xe4\x63\x21\x73\x2f\x8c\x86\xa5\xd3\x38\xf1\x85\x4f\xbd\x3d\x9f\x13\x22\xd7\xd5\x66\x04\x5d\x01\x1e\x80\x89\x09\x4f\xcd\x31\xfe\x39\xfd\x06\x8b\x82\xe6\x14\xa6\xc0\x32\x81\x25\x33\x31\xb1\xed\xbc\x31\x11\xb7\x2a\x86\x69\xce\x19\x73\x64\xa2\xa1\xe1\x04\x03\x97\x1d\xe8\x0b\xf1\xc4\x1c\xbb\xd5\x8f\xfd\x95\x56\x15\x66\x57\x79\xfe\x71\xf4\xdd\xba\x30\x41\xb7\x7b\xc2\xfe\xf0\xc6\x03\xbf\x4b\x5a\x8f\xf5\x87\xff\x39\xb7\x2b\x85\x59\x3d\xa7\xf4\x0e\x9c\x1e\xd6\x31\x1f\x0a\xd8\x1f\x8e\x7e\x90\xac\x37\x83\x71\xdd\x7f\xb5\xb9\xb0\x5f\x5d\x48\xbb\xcb\x09\xeb\xc6\xdd\x5e\x02\x19\x4e\xb1\x15\x4a\x22\xe4\x16\xdc\xfe\x7b\x00\x00\x00\xff\xff\xd8\x34\x71\x21\x4e\x06\x00\x00")

func glgoratStrokerType2CsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratStrokerType2CsGlsl,
		"glGorat-Stroker-type2.cs.glsl",
	)
}

func glgoratStrokerType2CsGlsl() (*asset, error) {
	bytes, err := glgoratStrokerType2CsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Stroker-type2.cs.glsl", size: 1614, mode: os.FileMode(438), modTime: time.Unix(1524898387, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratStrokerCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x7f\x6f\xdb\x36\x10\xfd\xdf\x80\xbf\xc3\x01\xfd\x47\xb4\x65\x59\xb2\xe3\x02\x83\xaa\x02\x59\x9b\x0d\x01\xd6\x64\x58\x3c\x20\xdd\x50\x04\x8c\x45\x65\x04\x24\xd2\x90\x68\x83\xea\xea\xef\x3e\x1c\x49\xc9\xb2\x13\xb9\x6e\x57\x23\x70\xe8\xd3\xfd\x78\xf7\xee\x91\xd4\xab\x2d\x2b\x2b\x2e\x05\x5c\xcc\xc3\xe1\x60\x38\x78\x95\xb2\x8c\x0b\x06\xef\x7e\xbb\xbd\xbb\x5a\xde\xfe\x75\xf5\xc7\x2d\x84\x41\x18\x86\x61\xf4\xec\xe1\xed\xcd\x15\x84\xc1\x4f\xf8\xd9\x3f\xfb\x70\x79\xff\xe7\xf5\xcd\x32\x7a\x0d\xaf\x17\x8b\xf9\x02\x73\x0e\x07\xd3\x29\x64\x94\xe7\x2c\x1d\x0e\x72\x5a\xcb\x8d\xf2\xca\xf9\x8c\xfb\xf0\xc8\x45\xca\xc5\x13\x24\x10\x12\xd8\x08\x9e\xc9\xb2\x80\x95\xfc\x87\x95\x4c\x28\xe0\xbc\xa0\x4f\x6c\xf6\x1e\xb8\xdc\xa8\xf5\x46\xc5\x4d\x34\x78\x95\x4a\x2f\xe6\x61\x37\x41\x44\xe0\x71\x93\x65\xac\x84\xdf\x25\x17\xaa\x82\x7f\x87\x03\x00\x80\x2d\x5b\xcd\x60\x6d\x4c\x7f\x7f\x8a\x87\x83\xdd\xc9\x2c\xb3\x36\xcb\xcf\x72\x23\xd2\x26\x09\xdf\xb2\xd5\x05\x3c\xa2\xe9\x28\x45\x2e\x57\x34\x7f\xa8\xf8\x67\xf6\xa0\x11\x85\x0f\x1d\x4b\x6d\x71\x71\x11\x23\x09\x1c\x5b\x5a\xe5\xb4\x58\x7b\xb8\xa4\x3e\xe0\xbf\x82\x0b\xb7\xa0\x9a\x18\xbf\xad\xe4\x29\x14\x94\x0b\x8f\x1c\x34\x91\x95\xb2\xf0\x41\x49\x1f\x14\x2b\xd6\xdb\x59\xbc\xc7\x36\x03\xac\x07\x09\x18\xc6\xee\xf8\x67\xe6\x39\xce\x88\xf3\xc2\x60\x48\x1a\x22\x9e\xf2\x87\x5f\x73\xf9\x48\xf3\x6b\xb1\x95\x2b\xaa\xb8\x14\xd7\xef\x03\xfd\xc9\x39\x2b\x09\x09\x34\xbe\x5e\x8f\x33\x8c\x21\x22\x4d\x04\xcf\xc0\xe3\x95\xa0\xc2\xc3\x42\x81\x06\xf2\xe5\x0b\x58\x83\x92\x81\x26\xc4\x35\x82\x9f\x92\xa9\x4d\x29\x5c\xe0\xce\xc1\xcb\x25\x55\x90\xf2\x12\x19\x8b\x8d\x60\x5a\xeb\x9a\xeb\xd6\x62\xfb\x53\xb2\x6c\x1b\xf4\x2d\x01\x5e\xe4\x43\x44\x7c\x64\xea\x02\xd7\xa1\xfd\x23\xa4\x03\xd0\x40\xab\xe1\x2d\x28\x19\xd4\x5d\x44\xb6\xee\x24\x8a\xf7\x26\x4b\x31\x24\x86\xb8\x8e\xdd\xf1\xa8\x64\xd7\x17\xe9\x3a\x98\xc9\xae\x29\x8a\xdd\xd7\x30\x01\x57\xfa\x4d\x77\x5f\xb5\xd3\xed\x23\xa5\xc5\xe0\x29\xe9\x72\xb4\xe3\xb4\x7c\xb1\x5c\xd1\xfb\x8f\x6d\xf5\x40\xc3\xb4\x59\xd6\x07\x9e\xfa\xdd\xa6\x2c\x5d\x37\x81\x6e\x38\x11\x0a\xea\x5f\x6c\x43\x5c\x28\x2f\xcb\xa5\x2c\x1d\x4b\x7b\xe2\xd0\x69\x89\x1d\x16\x5c\xa0\x70\xbd\x15\xe3\xb9\xe9\x8b\x10\xdf\xe8\x2e\xa8\x1b\xe7\xe9\xd4\x15\x95\xa5\xd1\x38\x6e\x00\x53\x21\x06\x6c\xbe\x5e\xca\xb8\x1e\x8f\xbb\xd4\x77\x1a\xf9\xe8\x6a\x18\x93\x57\x1b\x7d\xf9\x76\x56\x30\xc1\xed\xd1\x3c\x21\xbe\xe3\x93\xc4\xc7\x89\xf4\x0d\xd3\x0a\x12\xd7\xef\xb8\x49\x3c\x6a\xa8\xea\x04\xf0\xcc\xab\xe1\x2d\x9e\x3c\x1d\x38\x1d\x48\x90\x74\xa2\x79\x19\xbf\xe4\xa4\x43\x87\xd9\xd4\xf3\x6d\x79\xe2\x83\x8e\xd0\x4e\xf5\xa1\xbd\x27\x85\xa1\x1d\x12\xcb\xbe\x0e\x4d\x38\x72\x0c\x89\x61\x5a\x47\xc7\x81\xc8\xac\x0e\xb9\x9b\x9a\x4b\x60\xc2\x5a\x9b\x49\xf0\x2c\x2e\x03\x0f\x7d\xde\x24\x26\x1c\xf9\x3d\x6a\xbd\x03\xab\xc8\xf0\x54\x0e\x16\x30\x02\xaf\x61\xd3\xb6\x01\x93\x06\x74\xfc\x3c\xda\x6c\xd0\x4b\x25\x0b\xbe\xba\x4c\xd3\xe3\x4d\xea\x8e\x3f\x1d\x72\xb3\x3d\x8d\x78\x34\xf1\x01\x47\x8a\xb8\xbd\x14\x26\x90\xc2\x48\x17\x19\x81\xd1\xfe\x2e\x21\xc7\xad\x7c\x4b\x29\x6c\xb4\xb7\xdc\xd7\x4b\xed\x58\x5e\xb1\x5e\x9e\x2a\x3c\xb0\x60\x8a\xc4\x1a\x5e\x5e\x02\xda\x0e\x1a\x85\x19\x9e\xa4\xcf\xba\x4a\xc1\x3e\x70\xb1\xa9\xee\x4d\x88\x4d\x9c\xf5\x7a\xd3\xb0\x9d\x54\x05\xa3\x83\xe0\x83\x5f\xfd\xc8\x22\x83\xcc\xd4\xb1\xca\x1b\x43\xd4\x5f\xae\x68\xca\x61\x35\x1d\x65\xe6\xcb\xdc\x5c\x3f\x5c\x0c\x23\xa0\xe1\x19\x42\xc8\xc0\xb3\xe2\x6f\x84\x3d\x7b\x49\xd8\xdf\x82\xe8\xb4\x66\xc0\x8b\x26\x34\x9c\xd0\x82\x7c\x1d\x5c\x9f\x7c\x3a\x84\xe2\x61\x51\x99\xac\xc1\xc2\xce\xfa\xa5\x44\x3f\x12\x3e\xc5\x59\xd3\xf0\x0c\xf8\x7b\x98\xe9\x92\x17\xec\x0e\x4f\x45\x14\x5a\x9f\xab\x2c\xc1\x9c\xfc\x9a\x1b\xb1\xf3\x18\x57\x6f\xcc\x74\x26\x11\xfe\x38\x3c\xfe\xbf\xaf\xc1\x1e\xc1\x38\x84\xe7\xb4\xb4\x3b\x39\x10\xbc\x73\x69\x04\x63\x33\x15\x7b\xe9\x98\x06\x8c\xba\x26\x30\xff\x7f\xe3\x31\x99\x4e\xab\x0b\xa7\x33\xc3\xaf\xb3\x14\xf6\xbd\x1b\x2f\xea\xe3\x11\xf7\x5d\x71\xfa\x50\xec\x6e\xf7\x0e\x80\xe6\x3d\xc3\xdc\x14\x9d\xb7\x99\xdd\x59\xaf\xbf\x4e\x18\xf6\x5d\xc8\xdc\xab\x78\x87\x52\x1f\x97\xc4\x6f\xde\x90\x77\xff\x05\x00\x00\xff\xff\x99\x91\x78\xc6\xb4\x0c\x00\x00")

func glgoratStrokerCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratStrokerCsGlsl,
		"glGorat-Stroker.cs.glsl",
	)
}

func glgoratStrokerCsGlsl() (*asset, error) {
	bytes, err := glgoratStrokerCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Stroker.cs.glsl", size: 3252, mode: os.FileMode(438), modTime: time.Unix(1524828214, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"glGorat-Fill-Color.cs.glsl": glgoratFillColorCsGlsl,
	"glGorat-Fill-Fixed.cs.glsl": glgoratFillFixedCsGlsl,
	"glGorat-Fill-Gaussian.cs.glsl": glgoratFillGaussianCsGlsl,
	"glGorat-Fill-Nearest.cs.glsl": glgoratFillNearestCsGlsl,
	"glGorat-Fill-NearestNeighbor.cs.glsl": glgoratFillNearestneighborCsGlsl,
	"glGorat-Fill-Repeat-horizontal.cs.glsl": glgoratFillRepeatHorizontalCsGlsl,
	"glGorat-Fill-Repeat-vertical.cs.glsl": glgoratFillRepeatVerticalCsGlsl,
	"glGorat-Fill-Repeat.cs.glsl": glgoratFillRepeatCsGlsl,
	"glGorat-Filler.cs.glsl": glgoratFillerCsGlsl,
	"glGorat-Stroker-type2.cs.glsl": glgoratStrokerType2CsGlsl,
	"glGorat-Stroker.cs.glsl": glgoratStrokerCsGlsl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"glGorat-Fill-Color.cs.glsl": &bintree{glgoratFillColorCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Fixed.cs.glsl": &bintree{glgoratFillFixedCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Gaussian.cs.glsl": &bintree{glgoratFillGaussianCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Nearest.cs.glsl": &bintree{glgoratFillNearestCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-NearestNeighbor.cs.glsl": &bintree{glgoratFillNearestneighborCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat-horizontal.cs.glsl": &bintree{glgoratFillRepeatHorizontalCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat-vertical.cs.glsl": &bintree{glgoratFillRepeatVerticalCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat.cs.glsl": &bintree{glgoratFillRepeatCsGlsl, map[string]*bintree{}},
	"glGorat-Filler.cs.glsl": &bintree{glgoratFillerCsGlsl, map[string]*bintree{}},
	"glGorat-Stroker-type2.cs.glsl": &bintree{glgoratStrokerType2CsGlsl, map[string]*bintree{}},
	"glGorat-Stroker.cs.glsl": &bintree{glgoratStrokerCsGlsl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

