// Code generated by go-bindata.
// sources:
// glGorat-Fill-Color.cs.glsl
// glGorat-Fill-Fixed.cs.glsl
// glGorat-Fill-Gaussian.cs.glsl
// glGorat-Fill-Nearest.cs.glsl
// glGorat-Fill-NearestNeighbor.cs.glsl
// glGorat-Fill-Repeat-horizontal.cs.glsl
// glGorat-Fill-Repeat-vertical.cs.glsl
// glGorat-Fill-Repeat.cs.glsl
// glGorat-Filler.cs.glsl
// glGorat-Stroker-type2.cs.glsl
// glGorat-Stroker.cs.glsl
// glGorat-Util-Mixing.cs.glsl
// DO NOT EDIT!

package shaders

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _glgoratFillColorCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x4f\x8f\x9b\x30\x10\xc5\xef\x48\x7c\x87\x91\x72\x81\x84\x90\x00\x49\x2e\x11\x87\xb6\x91\xaa\x48\x6d\x2f\x6d\xa5\xde\x22\x03\x06\x8d\x6a\xec\xc8\xfc\x69\x48\x95\xef\xbe\xb2\x0d\xc1\xab\x5d\xed\x0d\x66\xe6\xf7\xe6\xcd\xf3\xa2\xa7\xb2\x41\xc1\x61\x97\x6c\x5d\xc7\x75\x16\x05\x2d\x91\x53\xf8\xfe\xe9\xcf\xef\xf3\x8f\x5f\xd1\x01\x0e\xfb\x7d\xb2\x57\x2d\x46\x06\xd1\xb5\x9e\x4c\x62\x0c\x20\x43\x5e\x20\xaf\x20\x85\xad\x0f\x1d\xc7\x52\xc8\x1a\x10\x6b\x52\xd1\xf8\x04\x35\x69\xfe\x1e\x67\xa2\xca\x48\x12\x97\x36\x14\x59\xd0\xc8\x48\xda\x74\xac\x7d\x52\xe0\x35\x6d\xb1\x4b\xb6\x36\x15\xfb\x90\x75\x65\x49\x25\x7c\x16\x1d\x2f\xe0\xbf\xeb\x00\x00\x60\x4f\xf3\xdd\xc8\xeb\xc6\xd1\x75\x1e\x1f\x0a\x25\x4f\xa1\x2f\x82\x09\x39\x09\x69\x9d\x5c\x55\x46\x85\x59\x83\x89\x9c\xb0\x4b\x83\x77\x7a\xb9\x29\xff\x01\x58\x95\xc1\x5c\x84\x5c\x23\xbd\xc0\x02\x6a\x82\xdc\xf3\x6d\x87\x31\x5c\x45\x03\xa9\xf9\xf6\x2a\x76\xf9\xca\x44\x46\xd8\x99\xf7\x22\x27\x2d\x0a\x7e\x3e\x85\xb7\xc1\xd7\x12\x8a\x29\x99\x20\x2d\x20\x6f\x29\x6f\x28\xa4\xe6\xdf\xd3\x69\x7d\x13\xa4\xf0\x54\xc6\x81\xd2\xf4\xc3\x9b\x0f\x9b\xf9\xc5\x8e\xf6\x4e\x93\x8a\x72\xa9\x56\x2b\xf8\x27\xde\xa9\x67\xca\xfe\x3b\xa3\xb6\x49\xf5\xbd\xb2\x83\x1d\x0d\x2a\xe6\x39\x1d\xaa\xeb\xe7\x35\xe1\x00\xeb\x57\xcd\x35\x44\x23\xb2\xd9\x58\x31\x5f\x25\xed\x27\x4b\xfa\x1e\xc3\x04\x33\x3b\x6d\xd2\xe3\x9c\xd2\x02\x52\xf3\x38\xb0\x9c\x62\x19\x27\xb4\xd6\x32\x85\x08\xd6\x7a\x30\xfc\x37\x1d\xa6\x0f\x6e\x85\xa4\x6f\xe5\x03\x83\xad\x34\xa1\x76\x3d\x5c\xe7\x25\x00\x00\xff\xff\xc8\x23\x76\x4a\x0e\x03\x00\x00")

func glgoratFillColorCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillColorCsGlsl,
		"glGorat-Fill-Color.cs.glsl",
	)
}

func glgoratFillColorCsGlsl() (*asset, error) {
	bytes, err := glgoratFillColorCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Color.cs.glsl", size: 782, mode: os.FileMode(438), modTime: time.Unix(1525337841, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillFixedCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xcf\x8b\x9c\x30\x14\xc7\xef\x82\xff\xc3\x83\xbd\xe8\xae\x63\x47\x9d\xd9\xcb\xe0\xa1\x65\xa1\x0c\xb4\xbd\xb4\x85\xde\x86\x38\x3e\xe5\xd1\x98\x2c\xf1\x47\x75\xcb\xfe\xef\x4b\x12\x5d\x23\x03\x7b\x19\x32\xc9\xfb\xe4\xfb\x23\xde\x0d\xa8\x5a\x92\x02\x0e\xd9\xde\xf7\x7c\xef\xae\xc4\x8a\x04\xc2\xf7\xcf\x7f\x7e\x9f\x7f\xfc\x4a\x1e\xe1\xf1\x78\xcc\x8e\xfa\x88\xb3\x49\xf6\x5d\xa0\xb2\x94\x22\x28\x48\x94\x24\x6a\xc8\x61\x1f\x42\x2f\xa8\x92\xaa\x01\xa2\x86\xd5\x98\x3e\x41\xc3\xda\xbf\xa7\x95\xa8\x0b\x96\xa5\x95\x0b\x25\x0e\x34\x33\x0a\xdb\x9e\x77\x2b\xd5\x76\xe5\x21\xdb\xbb\x50\x1a\x42\xd1\x57\x15\x2a\xf8\x22\x7b\x51\xee\xe1\xbf\xef\x01\x00\xd0\x80\xd7\xc3\xcc\x9b\x93\x93\xef\xbd\x7e\x28\x9f\xdd\xca\x57\xc4\x39\xaa\x8f\xe4\x0f\x5b\xf9\x64\x2b\x6f\xf9\x5b\x79\x08\xb8\xbc\x32\x7e\x69\xe9\x05\x2f\xa3\x8e\x1e\x81\xb3\x33\xd9\x32\x48\x9c\x74\xc5\x83\xa4\x12\x1a\x46\x22\x08\xdd\xdb\x53\x78\x96\x2d\xe4\x76\x1d\xd4\xfc\xf2\x95\xcb\x82\xf1\xb3\x18\xe4\x95\x75\x24\xc5\xf9\x29\x1e\xa7\xf0\xe4\x12\xd6\x8f\xe5\xf4\xef\xce\x75\x18\x8f\xd3\x3c\x5c\x71\xc9\x3a\x20\xd1\xa1\x68\x11\x72\xfb\x3f\x30\xa5\x7c\x93\xac\x0c\xf4\x4b\x46\xfa\x82\x30\x1e\x43\xf8\xb4\x7e\x17\xc6\xef\x2a\x67\xdb\xd7\x91\xb4\x4f\x8d\xff\xa4\x17\x0c\xec\xf6\xd6\x99\xdd\x73\x13\xe9\xf5\x83\xfb\x80\x4e\x9a\xf7\xe9\x58\x57\xb5\xca\xc4\x13\xec\x36\x87\x3b\x48\xde\x3d\x99\x17\x79\x56\x38\x2c\x66\x4c\x16\x3b\x1d\xad\xd4\xa2\x61\xc6\x05\x62\xb9\x19\xb7\x7d\x45\x6b\x93\x21\xdc\x2f\x4d\xcd\xa0\x91\xb8\xcf\x21\x81\x9d\xe1\xe3\x7f\x4b\x52\xd3\x40\x27\x15\xde\xaa\x46\x16\x7b\x30\x84\xb6\xf0\xea\x7b\x6f\x01\x00\x00\xff\xff\x97\xd6\x36\x4d\x87\x03\x00\x00")

func glgoratFillFixedCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillFixedCsGlsl,
		"glGorat-Fill-Fixed.cs.glsl",
	)
}

func glgoratFillFixedCsGlsl() (*asset, error) {
	bytes, err := glgoratFillFixedCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Fixed.cs.glsl", size: 903, mode: os.FileMode(438), modTime: time.Unix(1525392520, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillGaussianCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x4d\x8f\xdb\x36\x10\xbd\xeb\x57\x0c\x90\x0b\xb9\x92\xb5\x96\x2d\xe7\xa2\xfa\xd0\x22\x40\xb3\x40\x3f\x82\x26\x31\x7a\x5b\xd0\x16\x65\x10\xa5\xc8\x05\x25\x79\x49\x07\xfe\xef\x05\x49\x7d\x50\x91\xbb\xe8\x21\xbb\x80\x41\x0d\xe7\xbd\x99\x37\x1c\x0e\xdf\x5d\xa8\x6a\x98\x14\x90\x6f\xd7\x51\xf4\xae\xa4\x15\x13\x14\x7e\xff\xf9\xef\xaf\x4f\x7f\x7c\xc9\xde\xc3\xfb\xdd\x6e\xbb\x1b\xed\x9f\xbf\x7e\xfa\xf4\xe7\x5f\x5f\x20\x8b\x22\x4e\x8c\xec\x5a\xa4\xb6\x1b\x96\xc0\x91\x89\x92\x89\x33\xec\x61\x8d\xa1\x13\xac\x92\xaa\x06\xc6\x6a\x72\xa6\x9b\x0f\x50\x93\xe6\x9f\x62\x04\x9c\x8f\x64\xbb\xa9\x42\x4c\x16\x60\x7a\x88\xa2\x4d\xc7\xdb\x11\xd4\xb4\x65\xbe\x5d\x87\x98\x0d\x86\x63\x57\x55\x54\xc1\x2f\xb2\x13\xe5\xfa\x5b\x04\x00\xc0\x2e\xf4\x94\xf7\x60\x67\x2f\xa2\xdb\x5b\x91\xb7\xcb\xc8\x15\xe3\x9c\xaa\x37\x22\xe7\xf3\xc8\x19\x84\xa1\x2d\xfa\xfb\xc0\x80\xb8\x3c\x11\xfe\xdc\xb0\x2b\x7d\xd6\x56\x6f\x02\x81\xc5\xf8\x0a\x30\x51\x44\x51\xc5\x25\x69\xa1\x12\xc8\x2f\x34\x2e\xa2\xe8\x22\x59\x09\x35\x61\x02\xe1\x20\xd4\x06\x5e\x64\x03\x7b\xbf\x46\x67\xfe\xfc\x2b\x97\x47\xc2\x9f\xc4\x45\x9e\x48\xcb\xa4\x78\xfa\x90\x6a\x83\x8b\x00\xe0\x95\x79\x98\xfd\x5d\x4d\xd9\xa6\xda\x2c\x3d\x6d\x76\x36\x82\x2d\xcc\x67\x76\xa5\xc8\x9b\x7b\x4e\xe7\x58\x52\xde\x12\xd8\xbb\x0f\xe4\xcc\xf6\xcf\x25\x8f\x26\x92\x54\x63\x78\x0c\xac\x3e\xe4\x75\x9e\x00\x4e\xfe\x1b\x6f\xee\xe1\x5f\x67\x78\x83\x1d\x3c\x4c\xae\x39\x11\x4e\x17\xc9\xd5\x44\x23\x97\x76\xaa\x13\xc8\x82\xa8\xd3\x86\xb1\x1b\x0b\x3a\x45\xca\x05\xd9\x89\x32\x8e\x5c\x9c\x54\xc3\xc3\x70\x3d\x02\xd2\xc0\xc1\x04\x0e\x0b\xf2\x0b\xe1\xdd\x98\xeb\x78\x50\x8e\x74\x4c\x76\x32\x1b\x18\xed\xf3\x23\x56\x44\x9c\xe9\xc7\xb1\x2d\x98\x68\x91\x63\x4e\xf5\x4a\x91\x32\xd5\xf1\x3a\xdd\xe1\x04\x02\x7b\xec\xec\x78\xc9\x72\xb8\xc3\x62\x1c\x8b\x59\xb0\x18\xc7\x62\x06\x96\xc7\xc7\x41\x58\x0e\x27\xc9\xa5\xf2\xc2\x72\xb4\x4e\xdc\x7f\xef\xe6\x7b\xbc\xe9\x6a\x3b\x36\x06\x24\x7c\x94\x8a\x5d\xa5\x68\x09\xb7\x5b\xde\x51\x2a\x9b\x04\xd8\xbb\xe3\x15\xa6\xba\x00\x0d\x3f\x0d\x5f\xa6\xd0\x71\x8c\xbf\xcd\x1b\x08\x84\x54\x35\xe1\xb0\x07\x0d\x2b\xe8\xe5\x16\xdf\xf9\x28\x6a\x6f\x43\x25\x90\x77\xc6\xd3\xbe\x4f\x3c\xee\xfb\xff\x37\x49\xca\xfe\x5c\x92\xbe\x2c\x7a\x56\x01\x8c\x31\x3c\x58\xba\x89\xc1\x2a\x8b\xf7\x93\xed\x36\x48\x3c\x50\xd5\xb2\xd3\x1d\x81\x66\x10\x78\xb0\x02\xcd\x20\xf0\x90\x9a\xc2\xbc\x25\xd0\x8c\x02\xcd\x0f\x14\x18\x74\x09\x4e\xc0\xfc\x5f\x81\x9e\xf7\x71\x6f\xb7\xc3\x83\x66\xa2\xa5\xa2\xb1\x4d\xee\x6f\xf2\x14\xd6\xbe\x0f\x89\x1d\x49\xd8\x4f\x8a\xf1\xf5\x99\xb5\x53\xdf\x9b\x6e\xb6\x2f\x46\x93\x37\xcf\xbb\xd8\x99\xc2\x29\x69\xd7\x71\xf8\x3a\x4c\x13\x72\x74\x4e\xdd\x19\x8c\x41\x52\x5b\xda\x70\x73\x05\x59\x11\x4d\xed\xfd\xa2\xe8\x05\xc2\x12\x7a\xdf\x64\xc2\x4c\xb7\x3c\x07\x41\xa9\x9d\x21\xbe\x42\x0f\x43\x45\xbc\x83\x63\x7a\xd8\x43\x06\x2b\xe7\x97\xbe\xf6\x62\x9c\xc6\x56\x2a\xba\xe4\x4e\x3c\x2a\x76\x00\x5c\x44\xb7\x3b\x2f\x88\x6f\x1a\x7b\x75\x6a\x26\x90\x9b\x79\xc5\x68\x22\xc7\x06\xe9\xd9\x75\x3c\x12\x77\x44\x2f\xf2\x15\xad\xd3\x5d\x02\xf9\x58\xa0\xb6\x53\x02\xd0\xb8\x61\x17\x3a\x81\x0d\xc6\xb0\x72\x28\x7b\x72\x28\x83\x95\x5b\x17\xd1\xed\xdf\x00\x00\x00\xff\xff\x1e\xa5\x57\x9f\x5a\x08\x00\x00")

func glgoratFillGaussianCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillGaussianCsGlsl,
		"glGorat-Fill-Gaussian.cs.glsl",
	)
}

func glgoratFillGaussianCsGlsl() (*asset, error) {
	bytes, err := glgoratFillGaussianCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Gaussian.cs.glsl", size: 2138, mode: os.FileMode(438), modTime: time.Unix(1525392571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillNearestCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x5b\xab\xe3\x36\x10\x7e\x0f\xe4\x3f\x0c\xec\x8b\x15\x3b\xce\x7d\x5f\xdc\x3c\xb4\x2c\x74\x0f\xf4\xb2\x74\x77\x43\xdf\x0e\x4a\x2c\x07\x51\x45\x5a\x64\x3b\x47\xca\x21\xff\xbd\x8c\xe4\x8b\x12\x87\x40\xa1\xbb\x70\x70\x46\x33\xdf\x37\xdf\x68\x66\xf4\xe1\xcc\x74\xc9\x95\x84\xf5\x6a\x3e\x1e\x8d\x47\x1f\x72\x56\x70\xc9\xe0\xf7\x9f\xff\xfe\xfe\xf2\xc7\xb7\xc5\x47\xf8\xb8\xd9\xac\x36\xfd\xc1\xd7\xef\x5f\xbe\xfc\xf9\xd7\x37\x58\xa0\xb7\xa0\x56\xd5\x55\xa4\x57\x4b\x9e\xc0\x9e\xcb\x9c\xcb\x23\x6c\x61\x4e\xa0\x96\xbc\x50\xfa\x04\x9c\x9f\xe8\x91\x2d\x3f\xc1\x89\x96\xff\x64\x7d\xc4\x71\x4f\x57\xcb\x22\x0c\x5a\x04\x41\x4d\x8c\x66\x65\x2d\xaa\x3e\xaa\xac\xf2\xf5\x6a\x1e\x06\x2d\x09\xec\xeb\xa2\x60\x1a\x7e\x51\xb5\xcc\xe7\xf0\x3e\x1e\x01\x00\xf0\x33\x3b\xac\x9b\x78\x77\x92\x8d\x47\xd7\xa7\xf4\xab\x21\x7d\xc1\x85\x60\xfa\x19\xfd\xfa\x96\x7e\x71\x4b\x8f\xf1\x43\x72\x88\x84\x3a\x50\xf1\x5a\xf2\x0b\x7b\x35\x28\x3c\x81\xc0\x62\x7d\x29\xb8\xcc\xc6\xa3\x42\x28\x5a\x41\x21\x23\xff\x61\x48\x86\x45\x3f\x2b\x9e\xc3\x89\x72\x19\x91\x90\x6f\x09\x3f\x54\x09\x5b\xff\x1d\x1d\xc5\xeb\xaf\x42\xed\xa9\x78\x91\x67\x75\xa0\x15\x57\xf2\xe5\x53\x6a\x2c\x42\xf4\x11\x5e\xa1\x8f\xc3\xbf\xd3\x3e\xe7\xd4\xd8\x07\xae\x98\x22\x72\x60\x85\xbe\xf2\x0b\x8b\xbc\xb9\x45\x75\x9e\x39\x13\x15\x85\xad\xfb\x11\x79\x3b\xfe\x73\x1a\xa2\x1e\x26\x35\x04\x66\x81\xd5\xb3\x5e\x6e\x73\x20\xc9\x13\x00\xfb\x08\xe0\xed\x06\xc0\x12\x1f\x7f\x93\x60\x79\xa0\x82\x0d\x13\x3c\x51\x13\xb9\xdc\x53\x93\xc0\x22\x64\xee\x4f\x2c\x9e\x3c\x80\xd4\x34\x1f\x02\x1e\x18\x17\x91\x23\x4b\x0d\x4c\xda\xc9\x09\x81\x03\x0f\x1b\x78\x3c\x20\x38\x53\x51\x77\x39\x77\xd7\xe6\x70\xbb\x9c\x7b\xb3\x85\xce\x7e\x77\xe3\x9a\xca\x23\xfb\xdc\xb5\x09\x97\x55\xe4\xa0\x53\x33\xd5\x34\x4f\x4d\x3c\x4f\x37\x24\x81\xc0\x1e\x3b\x3b\x79\x00\xb3\x7b\x00\x63\x1d\x8c\x1d\xc0\x58\x07\x63\x3b\x98\xd9\xac\x13\xb7\x86\x83\x12\x4a\x7b\x71\xeb\x68\x9e\xb8\xff\xad\xa3\x6f\xfd\xb2\x3e\xe1\x5e\xe9\x82\xe1\xb3\xd2\xfc\xa2\x64\x45\x05\x9e\x35\xae\x4a\x63\x26\x80\x43\xe5\x75\xa6\x26\x03\x03\x3f\xb5\xbf\x6c\x66\xe2\x98\xbc\xdf\xb5\x14\x48\xa5\x4f\x54\xc0\x16\x0c\x4c\xa1\x51\x9d\xdd\x3b\x69\x86\x43\x52\xc8\xc8\x7b\x93\xc0\xc1\xa7\x1f\x37\x63\xf1\x9b\xa2\x79\x73\x43\x49\x53\x1e\x73\x53\x09\x42\x08\x4c\x10\x2f\x80\x40\x7d\xf1\x36\x30\x5e\x3b\xa5\x3b\xa6\x2b\x7e\x78\xa4\xd3\xb6\x3a\x77\xa8\xd3\xb6\x3a\x77\xa9\xcd\xec\x53\x9d\xb6\xd3\x69\xff\x57\x9d\x41\xd7\x90\x04\xec\x7f\xd0\xe9\xa1\x67\x5b\x74\xb8\xb9\x78\x2e\x2b\x26\x4b\xec\x7c\x3f\xe8\x3d\x35\x3e\x28\x09\x6e\x2d\xe2\x37\x49\xf7\x62\xb9\x25\x19\xb4\xaa\x7b\x04\x06\x8b\xcb\x9b\xef\xba\xda\xd9\xc2\x35\x8a\xdf\x71\xf8\x8e\x04\x2b\xb4\xf3\x4e\xdd\x45\x74\x34\x29\x96\x37\x3c\x9c\xc2\xa2\xcb\xc9\xf5\xfb\x0f\xcd\xce\x10\x96\xd1\x7b\x27\x7d\x54\x30\xfb\x6b\x90\x8c\xe1\x76\xf1\x35\x9a\xb4\x25\x69\x3c\x1c\xd6\x64\x0b\x0b\x98\x3a\xc7\xf4\xad\x95\xe4\xa4\x56\x4a\xb3\x21\x7c\xe2\xc3\x62\x17\x81\x5c\x57\xcc\x6f\xf0\xdc\x34\x1d\x84\xf3\x84\x2b\xd0\x24\xd0\x8d\x65\x6b\x43\xda\xd0\xae\x59\x55\x6b\x09\x38\x3f\xd7\x7f\x03\x00\x00\xff\xff\x1f\xb9\x2b\x07\x5c\x08\x00\x00")

func glgoratFillNearestCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillNearestCsGlsl,
		"glGorat-Fill-Nearest.cs.glsl",
	)
}

func glgoratFillNearestCsGlsl() (*asset, error) {
	bytes, err := glgoratFillNearestCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Nearest.cs.glsl", size: 2140, mode: os.FileMode(438), modTime: time.Unix(1525394816, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillNearestneighborCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\x06\x7f\x87\x81\xbd\x48\x1b\xc7\xf1\x9f\x64\x2f\x26\x87\x96\x85\x12\x68\x7b\x69\x0b\xbd\x05\x25\x96\xc3\x50\x45\x5a\xfc\x6f\xed\x94\xfd\xee\x45\x92\xbd\x96\xd7\x25\x97\xe0\x8c\xe6\xa7\xf7\xf4\x66\x1e\x5a\x5e\x56\xa8\x24\x6c\xd3\xc8\xf7\x7c\xef\x21\xe7\x05\x4a\x0e\xdf\x3e\xfd\xfe\x75\xf8\xfe\x33\x7e\x82\xa7\xdd\x2e\xdd\xe9\x23\xc1\x7a\xd5\xd4\xa4\x4c\x13\x0c\xe0\x84\x32\x47\x79\x81\x3d\x44\x14\x1a\x89\x85\x2a\xaf\x80\x78\x65\x17\x9e\x3c\xc3\x95\x55\x7f\xb2\x89\xb8\x9c\x58\x9a\x14\x2e\x14\x3b\xd0\xc0\x94\xbc\x6a\x44\x3d\x51\x55\x9d\x6f\xd3\xc8\x85\x12\x0a\xa7\xa6\x28\x78\x09\x9f\x55\x23\xf3\xe8\xaf\xef\x01\x00\x60\xcb\xcf\xdb\x01\x37\x07\x99\xef\xbd\xdd\x55\x4f\x97\xea\x05\x0a\xc1\xcb\x7b\xea\xdb\xb9\x7a\x0c\x33\x79\xcd\x2f\xc5\x81\x08\x75\x66\xe2\x58\xe1\x8d\x1f\x3b\xfd\xee\x00\x9c\x4a\x6f\x93\x40\x99\xe9\x7c\x5b\x85\x39\x5c\x19\x4a\x42\xdd\xbb\x13\x78\x51\x15\xec\xed\x37\xb9\x88\xe3\x17\xa1\x4e\x4c\x1c\x64\xab\xce\xac\x46\x25\x0f\xcf\x61\xd7\xd3\xcc\x25\xec\x6b\x2c\xa7\x7f\xd7\x93\xbf\xb0\xeb\x87\xd6\xcd\x66\x89\x68\x5b\x5a\x4b\xa7\xf2\x03\x6f\x9c\xd8\x32\xfd\x80\x18\x22\xe7\xa2\x66\xb0\x37\x7f\x48\x21\x14\xab\xc9\x74\x49\xd8\x51\xd8\xc0\x54\xb5\xda\xb7\xb9\x13\x1a\xc0\x82\xeb\xff\xc7\xbd\xce\xb8\x9e\x7e\xf4\x63\xfa\x01\x65\xcd\x65\xa5\xfd\x5b\xde\xbc\xe2\xab\x62\x39\xd1\xfb\x18\xe8\x24\xa8\xf5\xf5\xbe\xdd\x26\x78\x37\x06\xbb\x46\x8b\x18\x6c\x79\x1e\xb2\xad\xb9\xc3\xd1\xdf\x2b\x77\x13\x9d\xc1\xbc\x77\x87\x7a\xea\x93\x4c\xd8\xc3\x7a\x76\xb8\x86\x38\x1b\x3d\x99\xd5\x7a\x29\x79\x3b\x9a\x31\xaf\xb1\xdd\xc1\x44\x8d\x1a\xa6\x5d\x72\x9e\xcf\xda\x6d\xb8\xc1\x60\x9b\x10\x3b\xaf\x71\x43\x28\xac\x20\x0a\x77\x14\x1e\xed\x40\xa9\xfe\x1a\x92\x1c\xae\x35\x06\x1e\xf7\x10\xc3\xda\xdc\x1e\xbe\x8e\x39\x98\x7c\x6a\x55\xf2\xa5\xa7\xc0\x62\x2b\x43\x68\x83\x6f\xbe\xf7\x2f\x00\x00\xff\xff\x51\xf8\x92\xc9\x6d\x04\x00\x00")

func glgoratFillNearestneighborCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillNearestneighborCsGlsl,
		"glGorat-Fill-NearestNeighbor.cs.glsl",
	)
}

func glgoratFillNearestneighborCsGlsl() (*asset, error) {
	bytes, err := glgoratFillNearestneighborCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-NearestNeighbor.cs.glsl", size: 1133, mode: os.FileMode(438), modTime: time.Unix(1525395200, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatHorizontalCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\x81\x7c\x87\x81\xa5\x60\xef\x3a\x6a\x6c\x27\x7b\x31\x3e\xb4\x2c\x94\x40\xdb\x4b\x5b\xe8\x2d\xc8\xb1\x6c\x86\xca\xd2\x22\xff\xa9\xbd\x65\xbf\x7b\x91\x14\x47\x32\x5e\xf6\x12\x9c\xd1\xfc\xe6\xbd\x79\xd2\xdd\xc0\x54\x8b\x52\xc0\x21\xdd\x6f\x37\xdb\xcd\x5d\xc9\x2a\x14\x0c\xbe\x7d\xfa\xfd\xeb\xf4\xfd\x67\xfc\x08\x8f\xc7\x63\x7a\xd4\x47\x9c\x4e\xb2\xef\x02\x95\x26\x18\x41\x81\xa2\x44\x51\x43\x0e\xfb\x10\x7a\x81\x95\x54\x0d\x20\x36\xb4\x66\xc9\x13\x34\xb4\xfd\x93\x39\xa2\x2e\x68\x9a\x54\x3e\x14\x7b\xd0\x95\x51\xac\xed\x79\xe7\xa8\xb6\x2b\x0f\xe9\xde\x87\x92\x10\x8a\xbe\xaa\x98\x82\xcf\xb2\x17\xe5\xfe\xdf\x76\x03\x00\x80\x03\xbb\x1c\xae\xb8\x39\xc8\xb6\x9b\xd7\x77\xd5\xd3\xb5\x7a\x85\x9c\x33\xf5\x9e\xfa\x61\xa9\x1e\xc3\x42\x5e\xf3\x6b\x71\x08\xb8\xbc\x50\x7e\x6e\xf1\x85\x9d\x47\xbd\x77\x04\x5e\x65\xb2\x49\xa0\xc8\x74\xbe\x83\xc4\x12\x1a\x8a\x22\x08\xfd\xd9\x09\x3c\xcb\x16\x72\xfb\x1d\xd4\xfc\xfc\x85\xcb\x82\xf2\x93\x18\xe4\x85\x76\x28\xc5\xe9\x89\x8c\x53\x98\xf9\x84\xdd\xc6\x72\xfa\x77\xe7\xfc\x91\x71\x7a\xa3\x55\xdb\xd1\x1a\x3a\x8d\x1f\xf8\xc2\x02\x5b\x9e\xa7\xde\xe6\x91\x11\x3e\xe4\x1e\x43\xc6\xb9\x83\x4b\xda\x01\x8a\x8e\x89\x56\x4f\x32\xff\x03\x33\xef\xab\xa4\x65\xa0\x5f\x44\xa4\xbd\x84\x64\x0c\xe1\xa3\x7b\x5f\x66\x75\x67\xc7\x5e\xe3\xca\x8e\x2d\x2f\x97\xb4\x35\x3f\x1c\xfd\xfd\xe0\xbf\x04\x2f\x98\x5b\x37\xd1\xa9\x3b\x19\x32\xc1\x6e\x71\xb8\x83\xf8\xe6\xc9\x5c\xed\xb3\x62\xc3\x6c\xc6\xec\x62\xbb\x23\x47\xcd\x1a\xa6\x5d\x30\x56\x2e\xda\x6d\x5a\x91\x0b\x31\x84\xfb\x39\xa9\x2b\x68\x24\xee\x73\x88\x61\x67\x78\xf2\x77\xde\xd4\x24\xd0\x49\xc5\xd6\xaa\x91\xc5\x1e\x0c\xa1\x2d\xbc\x6a\xdb\xff\x03\x00\x00\xff\xff\xf7\x1f\x67\xd7\xd1\x03\x00\x00")

func glgoratFillRepeatHorizontalCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatHorizontalCsGlsl,
		"glGorat-Fill-Repeat-horizontal.cs.glsl",
	)
}

func glgoratFillRepeatHorizontalCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatHorizontalCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat-horizontal.cs.glsl", size: 977, mode: os.FileMode(438), modTime: time.Unix(1525395234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatVerticalCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x8b\xdb\x30\x10\xc5\xef\x06\x7f\x87\x81\xa5\x60\xef\x3a\x6a\x6c\x27\x7b\x31\x39\xb4\x2c\x94\x40\xdb\x4b\x5b\xe8\x2d\x28\xb1\x6c\x86\xca\xd2\x22\xff\xa9\xbd\x65\xbf\x7b\x91\x14\x47\x32\x5e\xf6\x12\x1c\x69\x7e\xf3\xde\x3c\xcd\xdd\xc0\x54\x8b\x52\xc0\x2e\xdf\x86\x41\x18\xdc\x95\xac\x42\xc1\xe0\xdb\xa7\xdf\xbf\x8e\xdf\x7f\xa6\x8f\xf0\xb8\xdf\xe7\x7b\x7d\xc5\xe9\x24\xfb\x2e\x52\x79\x86\x09\x9c\x51\x94\x28\x6a\x38\xc0\x36\x86\x5e\x60\x25\x55\x03\x88\x0d\xad\x59\xf6\x04\x0d\x6d\xff\x14\x8e\xa8\xcf\x34\xcf\x2a\x1f\x4a\x3d\xe8\xca\x28\xd6\xf6\xbc\x73\x54\xdb\x95\xbb\x7c\xeb\x43\x59\x0c\xe7\xbe\xaa\x98\x82\xcf\xb2\x17\xe5\x16\xfe\x85\x01\x00\x00\x0e\xec\xb2\xbb\xf2\xe6\xa6\x08\x83\xd7\x77\xe5\xf3\xb5\x7c\x85\x9c\x33\xf5\x9e\xfc\x6e\x29\x9f\x2e\xe5\x35\xbf\x16\x87\x88\xcb\x0b\xe5\xa7\x16\x5f\xd8\x69\xd4\x83\x27\xe0\x9d\x4c\x36\x0a\x14\x45\x18\x0c\x12\x4b\x68\x28\x8a\x28\xf6\x3b\x67\xf0\x2c\x5b\x38\xd8\xef\xa8\xe6\xa7\x2f\x5c\x9e\x29\x3f\x8a\x41\x5e\x68\x87\x52\x1c\x9f\xc8\x38\xc5\x85\x4f\xd8\x59\x2c\xa7\x7f\x37\xce\x1d\x19\xa7\x37\x4a\xb5\x19\xad\xa1\xb3\xf8\x81\x2f\x2c\xb2\xc7\x73\xd7\x5b\x3f\x32\xc1\x87\x83\xc7\x90\xb9\x59\xc5\x25\xed\x00\x45\xc7\x44\xab\x3b\x99\xff\x91\xe9\xf7\x55\xd2\x32\xd2\x0b\x91\x68\x2f\x31\x19\x63\xf8\xe8\xd6\xab\xd0\x9b\xe5\xec\xd8\x47\x5c\xd9\xb1\xc7\xcb\x21\xed\x99\x1f\x8e\xfe\x7e\xf0\xf7\xc0\x0b\xe6\x56\x4d\x74\xe6\x4e\x86\x4c\xb0\x59\x5c\x6e\x20\xbd\x79\x32\x0f\xfb\xac\xd8\x30\x9b\x31\xb3\xd8\xea\xc4\x51\xb3\x86\x29\x17\x8c\x95\x8b\x72\x9b\x56\xe2\x42\x8c\xe1\x7e\x4e\xea\x0a\x1a\x89\xfb\x03\xa4\xb0\x31\x3c\xf9\x3b\x4f\x6a\x12\xe8\xa4\x62\x6b\xd5\xc4\x62\x0f\x86\xd0\x16\x5e\xc3\xe0\x7f\x00\x00\x00\xff\xff\x82\xea\x69\x6b\xce\x03\x00\x00")

func glgoratFillRepeatVerticalCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatVerticalCsGlsl,
		"glGorat-Fill-Repeat-vertical.cs.glsl",
	)
}

func glgoratFillRepeatVerticalCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatVerticalCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat-vertical.cs.glsl", size: 974, mode: os.FileMode(438), modTime: time.Unix(1525395275, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillRepeatCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x5f\x8b\x9c\x30\x14\xc5\xdf\x05\xbf\xc3\x85\xa5\xa0\xbb\x4e\x3a\xea\xcc\xbe\x88\x0f\x2d\x0b\x65\xa0\xed\x4b\x5b\xe8\xdb\x10\xc7\x28\x97\xc6\x64\x89\x7f\xaa\x5b\xf6\xbb\x97\x24\xe3\x1a\x6b\x99\x17\x89\x37\xf7\x97\x73\xee\x49\xee\x06\xa6\x5a\x94\x02\x0e\xe9\xde\xf7\x7c\xef\xae\x64\x15\x0a\x06\x5f\x3e\xfc\xfc\x71\xfa\xfa\x3d\x7e\x84\xc7\xe3\x31\x3d\xea\x2d\x4e\x27\xd9\x77\x81\x4a\x13\x8c\xa0\x40\x51\xa2\xa8\x21\x87\x7d\x08\xbd\xc0\x4a\xaa\x06\x10\x1b\x5a\xb3\xe4\x09\x1a\xda\xfe\xca\x16\xa2\x2e\x68\x9a\x54\x2e\x14\x3b\xd0\x95\x51\xac\xed\x79\xb7\x50\x6d\x57\x1e\xd2\xbd\x0b\x25\x21\x14\x7d\x55\x31\x05\x1f\x65\x2f\xca\x3d\xfc\xf1\x3d\x00\x00\x1c\xd8\xe5\x70\xe5\xcd\x4e\xe6\x7b\xaf\x37\xe5\xd3\xad\x7c\x85\x9c\x33\x75\x4b\xfe\xb0\x96\x8f\xd7\xf2\x9a\xdf\x8a\x43\xc0\xe5\x85\xf2\x73\x8b\x2f\xec\x3c\xea\xc1\x23\x70\x2a\x93\x8d\x02\x45\xa6\x03\x1e\x24\x96\xd0\x50\x14\x41\xe8\x9e\x9d\xc0\xb3\x6c\x21\xb7\xeb\xa0\xe6\xe7\x4f\x5c\x16\x94\x9f\xc4\x20\x2f\xb4\x43\x29\x4e\x4f\x64\x9c\xc2\xcc\x25\xec\x34\x96\xd3\xdf\xdd\xe2\x8f\x8c\xd3\x7f\x5a\xb5\x1d\xad\xa1\xd3\xf8\x86\x2f\x2c\xb0\xe5\xf9\xd4\xb7\xf3\xc8\x08\xef\x72\x87\x21\xe3\xa6\x63\xfa\xa7\x63\x96\xab\xb8\xa4\x1d\xa0\xe8\x98\x68\xb5\x96\xf9\x0f\x8c\xe2\x67\x49\xcb\x40\x3f\x9a\x48\xbb\x0d\xc9\x18\xc2\xfb\xe5\x09\x9a\x70\x5c\xcb\xf6\xaa\x37\x96\x6d\x79\x1d\x84\xad\xb9\x01\xea\xf5\x83\xfb\x5a\x9c\xf0\xde\xba\x89\xbe\x99\x45\x86\x4c\xb0\x5b\x6d\xee\x20\xce\x66\x4f\xe6\xfa\x9f\x15\x1b\x66\x33\x66\x1a\xdb\x1d\x2d\xd4\xac\x61\xda\x05\x63\xe5\xaa\xdd\xe6\x15\x2d\x31\x86\x70\x3f\x67\x75\x05\x8d\xc4\x7d\x0e\x31\xec\x0c\x4f\x7e\xcf\x93\x9a\x04\x3a\xa9\xd8\x56\x35\xb2\xd8\x83\x21\xb4\x85\x57\xdf\xfb\x1b\x00\x00\xff\xff\x2d\x9f\x61\xe8\xf4\x03\x00\x00")

func glgoratFillRepeatCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillRepeatCsGlsl,
		"glGorat-Fill-Repeat.cs.glsl",
	)
}

func glgoratFillRepeatCsGlsl() (*asset, error) {
	bytes, err := glgoratFillRepeatCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Fill-Repeat.cs.glsl", size: 1012, mode: os.FileMode(438), modTime: time.Unix(1525395234, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratFillerCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x5f\x6b\xdb\x30\x14\xc5\x9f\x6b\xf0\x77\x38\xd0\x17\x99\x78\xa9\x9b\x3f\x7d\x71\x33\xd8\xc8\x58\x03\xed\x06\x6d\x07\x7b\x0b\x8a\x2c\xa7\x17\x1c\x69\x28\x72\xa2\x64\xf8\xbb\x0f\x39\xb6\xeb\xae\x0d\x7e\xf1\x95\x7e\xe7\xf8\xdc\x7b\x7d\xb9\x93\x66\x4b\x5a\x61\x32\x4e\xc2\x20\x0c\x2e\x33\x99\x93\x92\x78\xbe\xfb\xf6\xf8\x74\xf7\xf3\x7e\x8e\xd1\xeb\xe1\xc3\x97\xdf\xbf\x16\x3f\x9e\xaf\x6f\x70\x33\x9d\x8e\xa7\x9e\xf7\x4f\xc1\x0f\xba\xb4\xcc\x8c\x47\x14\x63\x45\x2a\x23\xb5\xc6\x0c\x49\x84\x52\x51\xae\xcd\x06\x42\xbf\x48\x23\x95\x05\xd1\x86\xaf\xe5\x68\x0e\xd2\xa5\xfd\x53\xda\xb4\x55\x83\x6d\x6d\x36\x19\x27\x7d\x83\xeb\x08\xab\x32\xcf\xa5\xc1\x57\x5d\xaa\x0c\x7f\xc3\x00\x00\x68\x27\xc5\x04\x2b\x7f\x94\x86\x41\xd5\xb3\x28\xb4\xe0\xc5\x72\x4b\x47\xb9\x74\x5e\x1f\xa3\x77\x72\x38\x39\x92\x4a\xc3\x60\xa7\x29\xc3\x86\x93\x62\x91\x77\xbd\xb8\xba\xc2\xdc\xf0\x3d\x1e\xa5\xb0\x61\x70\x41\xca\x62\x4f\x99\x7d\xc1\x0c\x75\xe0\x27\x3a\x4a\xd6\x44\x8e\x86\x2e\x6d\x18\x6f\x49\xca\xb2\x75\xb1\xfc\x5e\xe8\x15\x2f\x16\x6a\xa7\x05\xb7\xa4\xd5\x62\x3e\x74\x51\xcb\x71\x21\xfc\x3c\xba\xd2\xbf\xe4\xda\x30\x5f\xb8\xfa\x06\x0e\xb7\xa7\x4f\xa6\x0e\x83\x41\xe4\x43\xf9\x5e\xbd\x72\xd0\x84\xb8\xd7\x3c\x6b\x43\xc4\xf5\x14\x46\xcc\xc5\x38\x44\x4d\xa2\x9a\xc7\xcc\x6b\xda\x92\x72\x30\x8e\x5b\x24\x9d\x61\x0b\x7d\xe2\x2d\x53\xbd\x61\x3f\xbf\x2e\xf9\x9d\xa6\xbb\x39\x27\xed\x7e\x9a\xb7\x52\xab\x37\x24\x1e\x48\xb1\x7a\x67\x43\x17\xe3\x34\x9a\x73\xc0\xc1\x37\xf5\x01\xc0\x5d\x03\x1c\xcf\x38\x74\xc0\xbe\xef\x50\xc9\x62\x2b\xff\xef\x25\x79\xd7\x43\xbd\x67\xab\x8d\xfc\x70\xc6\xa7\x62\xc2\x78\x8c\x24\x4e\xe2\x24\xaa\xed\xab\x30\x40\xf5\x2f\x00\x00\xff\xff\xaa\x0a\x35\x77\x43\x03\x00\x00")

func glgoratFillerCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratFillerCsGlsl,
		"glGorat-Filler.cs.glsl",
	)
}

func glgoratFillerCsGlsl() (*asset, error) {
	bytes, err := glgoratFillerCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Filler.cs.glsl", size: 835, mode: os.FileMode(438), modTime: time.Unix(1524705109, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratStrokerType2CsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\x6d\x4b\x1b\x41\x10\xfe\x1e\xc8\x7f\x18\xf0\xcb\xae\x39\x2f\x77\x89\xfa\xe5\x4c\x41\xd4\x16\xa1\xd5\x52\x53\xb0\x2d\x22\x67\xb2\x67\x07\xee\x76\xc3\x66\x13\xf6\xac\xf9\xef\x65\xf6\x76\x93\x8d\xe2\x0b\xb8\x3c\x37\x2f\xcf\x3c\xf3\x72\xb0\x16\x7a\x89\x4a\xc2\xf1\x38\xeb\xf7\xfa\xbd\x83\xb9\xa8\x50\x0a\xb8\xf8\x7a\x7b\x77\x35\xbd\xfd\x7d\xf5\xe3\x16\xb2\x34\xcb\xb2\x2c\xdf\x7d\xfc\x76\x7e\xff\xf3\xfa\x66\x9a\x9f\xc2\xe9\xc9\xc9\xf8\x84\xfc\xe8\xb7\x2e\x5b\xb5\x32\x4c\x8f\x47\x98\xc0\x13\xca\x39\xca\x67\x98\x40\xc6\x61\x25\xb1\x52\xba\x81\x99\xfa\x2b\xb4\x90\x06\x10\x9b\xf2\x59\x8c\x2e\x01\xd5\xca\x2c\x56\xa6\x08\xde\xc0\x96\x66\x7e\x3c\xce\xe2\x00\x39\x87\xa7\x55\x55\x09\x0d\xdf\x15\x4a\xb3\x84\x7f\xfd\x1e\x00\xc0\x5a\xcc\x46\xb0\x70\xd0\x9f\x87\xa2\xdf\xdb\x44\x51\x6a\x35\x2b\xeb\xc7\x25\xbe\x88\x47\x4b\x21\x12\x88\x90\xb6\x0b\x8a\xb2\x20\xda\x48\x7c\x66\x75\xd9\x2c\x18\x3d\xcb\x04\xe8\x5f\x83\xd2\x3f\x4a\xcb\x9d\xdd\x5a\xe1\x1c\x9a\x12\x25\xe3\x7b\x0c\x2a\xad\x9a\x04\x8c\x4a\xc0\x88\x66\xb1\x1e\x15\xdd\x37\x82\x61\x12\xf8\x3d\xd7\x8f\x5f\x6a\xf5\x54\xd6\xd7\x72\xad\x66\xa5\x41\x25\xaf\x2f\x53\xfb\xe0\x8d\x8d\x82\x09\x04\x5b\xf6\x81\x31\x0c\x20\xe7\xc1\x03\x2b\x60\xb8\x94\xa5\x64\x94\x28\xb5\xc0\x5f\x5f\xa1\x03\x8c\x4a\x2d\xe7\x9e\x22\xfd\x68\x61\x56\x5a\x7a\xc7\x8d\xa7\x57\xab\xd2\xc0\x1c\x35\x69\x51\xf4\x7b\xc3\xe1\x0e\x5d\xa0\xdd\x22\xae\x51\x77\x46\x69\xc1\x7c\xaf\x12\x40\xaa\x9b\xe5\x09\xe4\x3c\x21\x0d\x8e\xe9\x9d\x75\x7f\x9c\x47\x04\x1d\xb5\x16\x3e\x81\x51\x69\x1b\x33\xea\xf2\x1e\xe5\xc5\x0e\xea\xc4\x83\x89\x13\x2e\xc2\xbd\x8e\x46\xc5\xb6\x24\xd7\x9e\xda\x9b\x90\x94\xaa\x6f\xe1\x08\x7c\xea\xb3\x78\x92\xb7\x7d\xfb\x48\x94\x2d\x07\x66\x94\x8f\x11\xca\xf1\x7a\x89\xda\x94\xf7\xbf\xb6\xd9\x53\x0b\xc3\xf0\x6c\xf7\x2c\xed\xc5\x4a\x6b\x5f\x4d\x6a\x83\x26\xd2\x40\xfb\xb9\x2b\x08\xa5\x61\x55\xad\x94\xf6\x2a\xed\x84\x23\xa3\xa9\xda\x33\x71\xfa\x05\x83\xe1\xd0\x27\x52\xda\x4d\x2c\x8d\xb3\x8b\x5a\x00\x15\xdc\x4e\x55\xd1\x0e\x06\xb1\xdc\x11\x79\xe2\xde\xa0\x64\x0e\x62\xad\x9b\xa9\xa4\xeb\x0f\x1c\xd1\xb0\x87\x2f\x3c\xf1\x1a\xf2\xe2\x6d\x20\x7b\x23\xac\x81\x89\xaf\x71\x10\x02\x1f\x06\x79\xde\x3b\x64\x3e\xab\xf3\x48\xba\x00\x3c\x01\x9b\x13\x5e\xda\x7d\xfc\xbd\xfb\x25\x56\x15\xcd\x29\x0c\x81\xcd\x04\xd6\xcc\xe6\xc4\xb6\xd3\xc6\x66\xdc\x55\x11\xbb\x79\x65\xec\x9e\x88\x96\x86\x13\x2c\x9c\x75\x60\x08\xc4\x0b\xbb\xaf\x96\x6b\x82\x5b\x6d\xba\x16\x14\xc2\xed\x00\xbe\x6c\x57\x20\xce\xb5\x5d\x92\x73\xa3\x1a\x9c\x9d\xcf\xe7\x6f\x17\xc5\x1f\x17\xeb\x16\x84\x42\xa6\x96\x27\xe1\xe4\xb4\x3b\xb4\xe5\xdc\x9d\x1c\xe6\xea\x3d\xa4\x1d\x39\xdc\xdd\x5a\x1e\x27\xdd\xec\x9e\x61\xd0\x9c\x76\xd1\x38\x6f\x3e\xba\x6c\xb8\x3d\x6d\x48\xb7\xcd\x17\xde\xad\x83\x6b\x12\x35\x84\x6c\x1b\x94\x44\xc8\x1f\xc0\xcd\xff\x00\x00\x00\xff\xff\x6d\xbd\x3c\x7a\x2b\x06\x00\x00")

func glgoratStrokerType2CsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratStrokerType2CsGlsl,
		"glGorat-Stroker-type2.cs.glsl",
	)
}

func glgoratStrokerType2CsGlsl() (*asset, error) {
	bytes, err := glgoratStrokerType2CsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Stroker-type2.cs.glsl", size: 1579, mode: os.FileMode(438), modTime: time.Unix(1525222812, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratStrokerCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x7f\x6f\xdb\x36\x10\xfd\xdf\x80\xbf\xc3\x01\xfd\x47\xb4\x65\x59\xb2\xe3\x02\x83\xaa\x02\x59\x9b\x0d\x01\xd6\x64\x58\x3c\x20\xdd\x50\x04\x8c\x45\x65\x04\x24\xd2\x90\x68\x83\xea\xea\xef\x3e\x1c\x49\xc9\xb2\x13\xb9\x6e\x57\x23\x70\xe8\xd3\xfd\x78\xf7\xee\x91\xd4\xab\x2d\x2b\x2b\x2e\x05\x5c\xcc\xc3\xe1\x60\x38\x78\x95\xb2\x8c\x0b\x06\xef\x7e\xbb\xbd\xbb\x5a\xde\xfe\x75\xf5\xc7\x2d\x84\x41\x18\x86\x61\xf4\xec\xe1\xed\xcd\x15\x84\xc1\x4f\xf8\xd9\x3f\xfb\x70\x79\xff\xe7\xf5\xcd\x32\x7a\x0d\xaf\x17\x8b\xf9\x02\x73\x0e\x07\xd3\x29\x64\x94\xe7\x2c\x1d\x0e\x72\x5a\xcb\x8d\xf2\xca\xf9\x8c\xfb\xf0\xc8\x45\xca\xc5\x13\x24\x10\x12\xd8\x08\x9e\xc9\xb2\x80\x95\xfc\x87\x95\x4c\x28\xe0\xbc\xa0\x4f\x6c\xf6\x1e\xb8\xdc\xa8\xf5\x46\xc5\x4d\x34\x78\x95\x4a\x2f\xe6\x61\x37\x41\x44\xe0\x71\x93\x65\xac\x84\xdf\x25\x17\xaa\x82\x7f\x87\x03\x00\x80\x2d\x5b\xcd\x60\x6d\x4c\x7f\x7f\x8a\x87\x83\xdd\xc9\x2c\xb3\x36\xcb\xcf\x72\x23\xd2\x26\x09\xdf\xb2\xd5\x05\x3c\xa2\xe9\x28\x45\x2e\x57\x34\x7f\xa8\xf8\x67\xf6\xa0\x11\x85\x0f\x1d\x4b\x6d\x71\x71\x11\x23\x09\x1c\x5b\x5a\xe5\xb4\x58\x7b\xb8\xa4\x3e\xe0\xbf\x82\x0b\xb7\xa0\x9a\x18\xbf\xad\xe4\x29\x14\x94\x0b\x8f\x1c\x34\x91\x95\xb2\xf0\x41\x49\x1f\x14\x2b\xd6\xdb\x59\xbc\xc7\x36\x03\xac\x07\x09\x18\xc6\xee\xf8\x67\xe6\x39\xce\x88\xf3\xc2\x60\x48\x1a\x22\x9e\xf2\x87\x5f\x73\xf9\x48\xf3\x6b\xb1\x95\x2b\xaa\xb8\x14\xd7\xef\x03\xfd\xc9\x39\x2b\x09\x09\x34\xbe\x5e\x8f\x33\x8c\x21\x22\x4d\x04\xcf\xc0\xe3\x95\xa0\xc2\xc3\x42\x81\x06\xf2\xe5\x0b\x58\x83\x92\x81\x26\xc4\x35\x82\x9f\x92\xa9\x4d\x29\x5c\xe0\xce\xc1\xcb\x25\x55\x90\xf2\x12\x19\x8b\x8d\x60\x5a\xeb\x9a\xeb\xd6\x62\xfb\x53\xb2\x6c\x1b\xf4\x2d\x01\x5e\xe4\x43\x44\x7c\x64\xea\x02\xd7\xa1\xfd\x23\xa4\x03\xd0\x40\xab\xe1\x2d\x28\x19\xd4\x5d\x44\xb6\xee\x24\x8a\xf7\x26\x4b\x31\x24\x86\xb8\x8e\xdd\xf1\xa8\x64\xd7\x17\xe9\x3a\x98\xc9\xae\x29\x8a\xdd\xd7\x30\x01\x57\xfa\x4d\x77\x5f\xb5\xd3\xed\x23\xa5\xc5\xe0\x29\xe9\x72\xb4\xe3\xb4\x7c\xb1\x5c\xd1\xfb\x8f\x6d\xf5\x40\xc3\xb4\x59\xd6\x07\x9e\xfa\xdd\xa6\x2c\x5d\x37\x81\x6e\x38\x11\x0a\xea\x5f\x6c\x43\x5c\x28\x2f\xcb\xa5\x2c\x1d\x4b\x7b\xe2\xd0\x69\x89\x1d\x16\x5c\xa0\x70\xbd\x15\xe3\xb9\xe9\x8b\x10\xdf\xe8\x2e\xa8\x1b\xe7\xe9\xd4\x15\x95\xa5\xd1\x38\x6e\x00\x53\x21\x06\x6c\xbe\x5e\xca\xb8\x1e\x8f\xbb\xd4\x77\x1a\xf9\xe8\x6a\x18\x93\x57\x1b\x7d\xf9\x76\x56\x30\xc1\xed\xd1\x3c\x21\xbe\xe3\x93\xc4\xc7\x89\xf4\x0d\xd3\x0a\x12\xd7\xef\xb8\x49\x3c\x6a\xa8\xea\x04\xf0\xcc\xab\xe1\x2d\x9e\x3c\x1d\x38\x1d\x48\x90\x74\xa2\x79\x19\xbf\xe4\xa4\x43\x87\xd9\xd4\xf3\x6d\x79\xe2\x83\x8e\xd0\x4e\xf5\xa1\xbd\x27\x85\xa1\x1d\x12\xcb\xbe\x0e\x4d\x38\x72\x0c\x89\x61\x5a\x47\xc7\x81\xc8\xac\x0e\xb9\x9b\x9a\x4b\x60\xc2\x5a\x9b\x49\xf0\x2c\x2e\x03\x0f\x7d\xde\x24\x26\x1c\xf9\x3d\x6a\xbd\x03\xab\xc8\xf0\x54\x0e\x16\x30\x02\xaf\x61\xd3\xb6\x01\x93\x06\x74\xfc\x3c\xda\x6c\xd0\x4b\x25\x0b\xbe\xba\x4c\xd3\xe3\x4d\xea\x8e\x3f\x1d\x72\xb3\x3d\x8d\x78\x34\xf1\x01\x47\x8a\xb8\xbd\x14\x26\x90\xc2\x48\x17\x19\x81\xd1\xfe\x2e\x21\xc7\xad\x7c\x4b\x29\x6c\xb4\xb7\xdc\xd7\x4b\xed\x58\x5e\xb1\x5e\x9e\x2a\x3c\xb0\x60\x8a\xc4\x1a\x5e\x5e\x02\xda\x0e\x1a\x85\x19\x9e\xa4\xcf\xba\x4a\xc1\x3e\x70\xb1\xa9\xee\x4d\x88\x4d\x9c\xf5\x7a\xd3\xb0\x9d\x54\x05\xa3\x83\xe0\x83\x5f\xfd\xc8\x22\x83\xcc\xd4\xb1\xca\x1b\x43\xd4\x5f\xae\x68\xca\x61\x35\x1d\x65\xe6\xcb\xdc\x5c\x3f\x5c\x0c\x23\xa0\xe1\x19\x42\xc8\xc0\xb3\xe2\x6f\x84\x3d\x7b\x49\xd8\xdf\x82\xe8\xb4\x66\xc0\x8b\x26\x34\x9c\xd0\x82\x7c\x1d\x5c\x9f\x7c\x3a\x84\xe2\x61\x51\x99\xac\xc1\xc2\xce\xfa\xa5\x44\x3f\x12\x3e\xc5\x59\xd3\xf0\x0c\xf8\x7b\x98\xe9\x92\x17\xec\x0e\x4f\x45\x14\x5a\x9f\xab\x2c\xc1\x9c\xfc\x9a\x1b\xb1\xf3\x18\x57\x6f\xcc\x74\x26\x11\xfe\x38\x3c\xfe\xbf\xaf\xc1\x1e\xc1\x38\x84\xe7\xb4\xb4\x3b\x39\x10\xbc\x73\x69\x04\x63\x33\x15\x7b\xe9\x98\x06\x8c\xba\x26\x30\xff\x7f\xe3\x31\x99\x4e\xab\x0b\xa7\x33\xc3\xaf\xb3\x14\xf6\xbd\x1b\x2f\xea\xe3\x11\xf7\x5d\x71\xfa\x50\xec\x6e\xf7\x0e\x80\xe6\x3d\xc3\xdc\x14\x9d\xb7\x99\xdd\x59\xaf\xbf\x4e\x18\xf6\x5d\xc8\xdc\xab\x78\x87\x52\x1f\x97\xc4\x6f\xde\x90\x77\xff\x05\x00\x00\xff\xff\x99\x91\x78\xc6\xb4\x0c\x00\x00")

func glgoratStrokerCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratStrokerCsGlsl,
		"glGorat-Stroker.cs.glsl",
	)
}

func glgoratStrokerCsGlsl() (*asset, error) {
	bytes, err := glgoratStrokerCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Stroker.cs.glsl", size: 3252, mode: os.FileMode(438), modTime: time.Unix(1524811923, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _glgoratUtilMixingCsGlsl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xb1\x6a\xc3\x30\x14\x45\x77\x83\xff\xe1\x42\x17\x19\x44\x48\x9d\x6c\x21\x5b\xa0\x04\xba\xf5\x03\xcc\x93\xac\x98\x07\xb2\x5e\xb1\x15\xd5\x6e\xe9\xbf\x17\xd9\x43\x5b\x02\x1e\x04\xe2\xea\x1c\xdd\xfb\x94\xdc\x30\xb2\x04\x1c\x0f\xfb\xb2\x28\x0b\x4f\xb3\xdc\xa3\x1a\x3a\x43\x87\xfa\xa6\x61\x38\xb4\x1c\x3a\x9c\xb1\xaf\x70\x0f\x7c\x93\xa1\x07\xf7\xd4\xb9\xfa\x82\x28\xa7\x2d\xe3\xf9\xd1\xa0\x4d\xa1\x7e\x14\xcc\xe9\x77\x15\x94\x17\x4b\xbe\x19\xf9\xd3\x35\x53\x2e\xd0\xf8\x93\xcc\x6b\x25\x87\x45\x49\xc2\x2d\x7a\xe2\xa0\x2a\x7c\x95\x05\x00\x70\x72\xb6\xc6\xbb\x8c\x38\xaf\x77\xd5\xf9\xe6\xc5\x8b\x21\x7f\x0d\x49\x2c\x45\x96\x70\xbd\xec\xa6\xb9\x3a\xad\x46\x72\xf6\x08\x4b\x99\xcf\x7b\x5e\x85\x5a\x45\x3a\x7f\xf1\x9f\x30\x1b\xc4\x92\xbf\x45\x19\x9c\x8a\xb2\xbc\x68\xf4\x3c\x29\x4b\x1a\xd6\xe4\xb3\xfb\xa8\x32\xfc\x5d\x16\x3f\x01\x00\x00\xff\xff\xf9\x7a\x03\x80\x8e\x01\x00\x00")

func glgoratUtilMixingCsGlslBytes() ([]byte, error) {
	return bindataRead(
		_glgoratUtilMixingCsGlsl,
		"glGorat-Util-Mixing.cs.glsl",
	)
}

func glgoratUtilMixingCsGlsl() (*asset, error) {
	bytes, err := glgoratUtilMixingCsGlslBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "glGorat-Util-Mixing.cs.glsl", size: 398, mode: os.FileMode(438), modTime: time.Unix(1525424395, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"glGorat-Fill-Color.cs.glsl": glgoratFillColorCsGlsl,
	"glGorat-Fill-Fixed.cs.glsl": glgoratFillFixedCsGlsl,
	"glGorat-Fill-Gaussian.cs.glsl": glgoratFillGaussianCsGlsl,
	"glGorat-Fill-Nearest.cs.glsl": glgoratFillNearestCsGlsl,
	"glGorat-Fill-NearestNeighbor.cs.glsl": glgoratFillNearestneighborCsGlsl,
	"glGorat-Fill-Repeat-horizontal.cs.glsl": glgoratFillRepeatHorizontalCsGlsl,
	"glGorat-Fill-Repeat-vertical.cs.glsl": glgoratFillRepeatVerticalCsGlsl,
	"glGorat-Fill-Repeat.cs.glsl": glgoratFillRepeatCsGlsl,
	"glGorat-Filler.cs.glsl": glgoratFillerCsGlsl,
	"glGorat-Stroker-type2.cs.glsl": glgoratStrokerType2CsGlsl,
	"glGorat-Stroker.cs.glsl": glgoratStrokerCsGlsl,
	"glGorat-Util-Mixing.cs.glsl": glgoratUtilMixingCsGlsl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"glGorat-Fill-Color.cs.glsl": &bintree{glgoratFillColorCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Fixed.cs.glsl": &bintree{glgoratFillFixedCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Gaussian.cs.glsl": &bintree{glgoratFillGaussianCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Nearest.cs.glsl": &bintree{glgoratFillNearestCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-NearestNeighbor.cs.glsl": &bintree{glgoratFillNearestneighborCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat-horizontal.cs.glsl": &bintree{glgoratFillRepeatHorizontalCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat-vertical.cs.glsl": &bintree{glgoratFillRepeatVerticalCsGlsl, map[string]*bintree{}},
	"glGorat-Fill-Repeat.cs.glsl": &bintree{glgoratFillRepeatCsGlsl, map[string]*bintree{}},
	"glGorat-Filler.cs.glsl": &bintree{glgoratFillerCsGlsl, map[string]*bintree{}},
	"glGorat-Stroker-type2.cs.glsl": &bintree{glgoratStrokerType2CsGlsl, map[string]*bintree{}},
	"glGorat-Stroker.cs.glsl": &bintree{glgoratStrokerCsGlsl, map[string]*bintree{}},
	"glGorat-Util-Mixing.cs.glsl": &bintree{glgoratUtilMixingCsGlsl, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

